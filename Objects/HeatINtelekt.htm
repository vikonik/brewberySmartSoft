<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\HeatINtelekt.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\HeatINtelekt.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Tue Oct 28 08:50:40 2025
<BR><P>
<H3>Maximum Stack Usage =        368 bytes + Unknown(Functions without stacksize, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
_printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; btod_internal_mul &rArr; __ARM_common_ll_muluu
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[c3]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[44]">ADC_IRQHandler</a> from interrupts.o(i.ADC_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[3d]">ARINC429R_IRQHandler</a> from interrupts.o(i.ARINC429R_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[48]">ARINC429T1_IRQHandler</a> from interrupts.o(i.ARINC429T1_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[49]">ARINC429T2_IRQHandler</a> from interrupts.o(i.ARINC429T2_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[4a]">ARINC429T3_IRQHandler</a> from interrupts.o(i.ARINC429T3_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[4b]">ARINC429T4_IRQHandler</a> from interrupts.o(i.ARINC429T4_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[4c]">BKP_IRQHandler</a> from interrupts.o(i.BKP_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[3c]">BUSY_IRQHandler</a> from interrupts.o(i.BUSY_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[36]">CAN1_IRQHandler</a> from interrupts.o(i.CAN1_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[37]">CAN2_IRQHandler</a> from interrupts.o(i.CAN2_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[38]">DMA_IRQHandler</a> from interrupts.o(i.DMA_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[45]">ETHERNET_IRQHandler</a> from interrupts.o(i.ETHERNET_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[4d]">EXT_INT1_IRQHandler</a> from interrupts.o(i.EXT_INT1_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[4e]">EXT_INT2_IRQHandler</a> from interrupts.o(i.EXT_INT2_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[4f]">EXT_INT3_IRQHandler</a> from interrupts.o(i.EXT_INT3_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[50]">EXT_INT4_IRQHandler</a> from interrupts.o(i.EXT_INT4_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[2f]">HardFault_Handler</a> from interrupts.o(i.HardFault_Handler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[34]">MIL_STD_1553B1_IRQHandler</a> from interrupts.o(i.MIL_STD_1553B1_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[33]">MIL_STD_1553B2_IRQHandler</a> from interrupts.o(i.MIL_STD_1553B2_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[2e]">NMI_Handler</a> from interrupts.o(i.NMI_Handler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[3e]">POWER_IRQHandler</a> from interrupts.o(i.POWER_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[31]">PendSV_Handler</a> from interrupts.o(i.PendSV_Handler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[2d]">Reset_Handler</a> from startup_k1986ve1xi.o(.text) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[3b]">SSP1_IRQHandler</a> from interrupts.o(i.SSP1_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[47]">SSP2_IRQHandler</a> from interrupts.o(i.SSP2_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[46]">SSP3_IRQHandler</a> from interrupts.o(i.SSP3_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[30]">SVC_Handler</a> from interrupts.o(i.SVC_Handler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[5d]">StateMachine_Process</a> from state_machine.o(i.StateMachine_Process) referenced from menureceptcontrol.o(i.receptSetFunction)
 <LI><a href="#[5e]">StateMachine_Process_Loaded</a> from state_machineloaded.o(i.StateMachine_Process_Loaded) referenced from menureceptloaded.o(i.receptSetFunctionLoaded)
 <LI><a href="#[32]">SysTick_Handler</a> from interrupts.o(i.SysTick_Handler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[51]">SystemInit</a> from system_k1986ve1xi.o(i.SystemInit) referenced from startup_k1986ve1xi.o(.text)
 <LI><a href="#[41]">TIMER1_IRQHandler</a> from interrupts.o(i.TIMER1_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[42]">TIMER2_IRQHandler</a> from interrupts.o(i.TIMER2_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[43]">TIMER3_IRQHandler</a> from interrupts.o(i.TIMER3_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[40]">TIMER4_IRQHandler</a> from interrupts.o(i.TIMER4_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[39]">UART1_IRQHandler</a> from interrupts.o(i.UART1_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[3a]">UART2_IRQHandler</a> from interrupts.o(i.UART2_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[35]">USB_IRQHandler</a> from interrupts.o(i.USB_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[3f]">WWDG_IRQHandler</a> from interrupts.o(i.WWDG_IRQHandler) referenced from startup_k1986ve1xi.o(RESET)
 <LI><a href="#[6f]">__main</a> from __main.o(!!!main) referenced from startup_k1986ve1xi.o(.text)
 <LI><a href="#[6e]">_printf_fp_dec_real</a> from _printf_fp_dec.o(.text) referenced from printf1.o(x$fpl$printf1)
 <LI><a href="#[54]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[53]">_sputc</a> from _sputc.o(.text) referenced from __2sprintf.o(.text)
 <LI><a href="#[1e]">allMenuTextClear</a> from mainpage.o(i.allMenuTextClear) referenced 2 times from menusetting.o(.data)
 <LI><a href="#[1e]">allMenuTextClear</a> from mainpage.o(i.allMenuTextClear) referenced from menumanualcontrol.o(i.printMenuManualControl)
 <LI><a href="#[1e]">allMenuTextClear</a> from mainpage.o(i.allMenuTextClear) referenced from menurecept.o(i.printMenuReceptMain)
 <LI><a href="#[1b]">cahageWiFiState</a> from menusetting.o(i.cahageWiFiState) referenced 2 times from menusetting.o(.data)
 <LI><a href="#[1c]">changeBtState</a> from menusetting.o(i.changeBtState) referenced 2 times from menusetting.o(.data)
 <LI><a href="#[1d]">changeMuteState</a> from menusetting.o(i.changeMuteState) referenced 2 times from menusetting.o(.data)
 <LI><a href="#[56]">disinfection</a> from menuclearing.o(i.disinfection) referenced from menuclearing.o(i.disinfectionProcessSkip)
 <LI><a href="#[56]">disinfection</a> from menuclearing.o(i.disinfection) referenced from menuclearing.o(i.disinfectionProcessStart)
 <LI><a href="#[57]">disinfectionProcessSkip</a> from menuclearing.o(i.disinfectionProcessSkip) referenced from menuclearing.o(i.disinfectionProcessStart)
 <LI><a href="#[6a]">disinfectionProcessStart</a> from menuclearing.o(i.disinfectionProcessStart) referenced from menuclearing.o(i.transitionToDisinfectionMenu)
 <LI><a href="#[59]">functionNull</a> from hal.o(i.functionNull) referenced from main.o(i.main)
 <LI><a href="#[59]">functionNull</a> from hal.o(i.functionNull) referenced from menureceptcontrol.o(i.receptSetFunction)
 <LI><a href="#[59]">functionNull</a> from hal.o(i.functionNull) referenced from menureceptloaded.o(i.receptSetFunctionLoaded)
 <LI><a href="#[59]">functionNull</a> from hal.o(i.functionNull) referenced from powertuning.o(i.setPower)
 <LI><a href="#[59]">functionNull</a> from hal.o(i.functionNull) referenced from menureceptshablon.o(i.shablonSetFunction)
 <LI><a href="#[59]">functionNull</a> from hal.o(i.functionNull) referenced from menureceptcontrol.o(i.stopProcess)
 <LI><a href="#[59]">functionNull</a> from hal.o(i.functionNull) referenced from menuclearing.o(i.transitionToCompletionMenu)
 <LI><a href="#[59]">functionNull</a> from hal.o(i.functionNull) referenced from menuclearing.o(i.transitionToDisinfectionMenu)
 <LI><a href="#[59]">functionNull</a> from hal.o(i.functionNull) referenced from menuclearing.o(i.transitionToRinsingMenu)
 <LI><a href="#[59]">functionNull</a> from hal.o(i.functionNull) referenced from menuclearing.o(i.woshingCancel)
 <LI><a href="#[61]">menuChangeDataFunctionTemp</a> from menureceptshablon.o(i.menuChangeDataFunctionTemp) referenced from menureceptshablon.o(i.setButtonNavigationToChangeValueTemp)
 <LI><a href="#[62]">menuChangeDataFunctionTempRecepte</a> from menureceptcontrol.o(i.menuChangeDataFunctionTempRecepte) referenced from menureceptcontrol.o(i.setButtonNavigationToChangeValueTempRecepte)
 <LI><a href="#[63]">menuChangeDataFunctionTempRecepteLoaded</a> from menureceptloaded.o(i.menuChangeDataFunctionTempRecepteLoaded) referenced from menureceptloaded.o(i.setButtonNavigationToChangeValueTempRecepteLoaded)
 <LI><a href="#[64]">menuChangeDataFunctionTimer</a> from menureceptshablon.o(i.menuChangeDataFunctionTimer) referenced from menureceptshablon.o(i.setButtonNavigationToChangeValueTimer)
 <LI><a href="#[65]">menuChangeDataFunctionTimerRecepte</a> from menureceptcontrol.o(i.menuChangeDataFunctionTimerRecepte) referenced from menureceptcontrol.o(i.setButtonNavigationToChangeValueTimerRecepte)
 <LI><a href="#[66]">menuChangeDataFunctionTimerRecepteLoaded</a> from menureceptloaded.o(i.menuChangeDataFunctionTimerRecepteLoaded) referenced from menureceptloaded.o(i.setButtonNavigationToChangeValueTimerRecepteLoaded)
 <LI><a href="#[5a]">menuChangeTimeFunctionTime</a> from menusetting.o(i.menuChangeTimeFunctionTime) referenced from menusetting.o(i.menuChangeTimesetButtonNavigationFunction)
 <LI><a href="#[1f]">menuChangeTimesetButtonNavigationFunction</a> from menusetting.o(i.menuChangeTimesetButtonNavigationFunction) referenced 4 times from menusetting.o(.data)
 <LI><a href="#[55]">menuNavigationFunction</a> from main.o(i.menuNavigationFunction) referenced from menusetting.o(i.changeValueTime)
 <LI><a href="#[55]">menuNavigationFunction</a> from main.o(i.menuNavigationFunction) referenced from main.o(i.main)
 <LI><a href="#[55]">menuNavigationFunction</a> from main.o(i.menuNavigationFunction) referenced from menureceptshablon.o(i.setMenuNavigationToChangeValue)
 <LI><a href="#[55]">menuNavigationFunction</a> from main.o(i.menuNavigationFunction) referenced from menureceptcontrol.o(i.setMenuNavigationToChangeValueRecepte)
 <LI><a href="#[55]">menuNavigationFunction</a> from main.o(i.menuNavigationFunction) referenced from menureceptloaded.o(i.setMenuNavigationToChangeValueRecepteLoaded)
 <LI><a href="#[20]">menuSetTimeOK</a> from menusetting.o(i.menuSetTimeOK) referenced 2 times from menusetting.o(.data)
 <LI><a href="#[1a]">printChangeTime</a> from menusetting.o(i.printChangeTime) referenced 2 times from menusetting.o(.data)
 <LI><a href="#[23]">printInsRecept</a> from menureceptcontrol.o(i.printInsRecept) referenced 2 times from menureceptcontrol.o(.data)
 <LI><a href="#[12]">printMenuClearingState_1</a> from menuclearing.o(i.printMenuClearingState_1) referenced 2 times from mainpage.o(.data)
 <LI><a href="#[13]">printMenuManualControl</a> from menumanualcontrol.o(i.printMenuManualControl) referenced 2 times from mainpage.o(.data)
 <LI><a href="#[13]">printMenuManualControl</a> from menumanualcontrol.o(i.printMenuManualControl) referenced from menumanualcontrol.o(i.printShablonManalControl)
 <LI><a href="#[15]">printMenuReceptInt</a> from menurecept.o(i.printMenuReceptInt) referenced 2 times from menurecept.o(.data)
 <LI><a href="#[16]">printMenuReceptLoaded</a> from menurecept.o(i.printMenuReceptLoaded) referenced 2 times from menurecept.o(.data)
 <LI><a href="#[11]">printMenuReceptMain</a> from menurecept.o(i.printMenuReceptMain) referenced 2 times from mainpage.o(.data)
 <LI><a href="#[11]">printMenuReceptMain</a> from menurecept.o(i.printMenuReceptMain) referenced from menurecept.o(i.printMenuReceptInt)
 <LI><a href="#[11]">printMenuReceptMain</a> from menurecept.o(i.printMenuReceptMain) referenced from menurecept.o(i.printMenuReceptLoaded)
 <LI><a href="#[14]">printMenuSetting</a> from menusetting.o(i.printMenuSetting) referenced 4 times from mainpage.o(.data)
 <LI><a href="#[2b]">printReceptLoaded</a> from menureceptloaded.o(i.printReceptLoaded) referenced 2 times from menureceptloaded.o(.data)
 <LI><a href="#[19]">printShablonManalControl</a> from menumanualcontrol.o(i.printShablonManalControl) referenced 10 times from menumanualcontrol.o(.data)
 <LI><a href="#[24]">receptSetFunction</a> from menureceptcontrol.o(i.receptSetFunction) referenced 2 times from menureceptcontrol.o(.data)
 <LI><a href="#[2c]">receptSetFunctionLoaded</a> from menureceptloaded.o(i.receptSetFunctionLoaded) referenced 2 times from menureceptloaded.o(.data)
 <LI><a href="#[5c]">returnMenuClearingState_1</a> from menuclearing.o(i.returnMenuClearingState_1) referenced from menuclearing.o(i.printMenuClearingState_1)
 <LI><a href="#[60]">rinsingProcess</a> from menuclearing.o(i.rinsingProcess) referenced from menuclearing.o(i.rinsingProcessStart)
 <LI><a href="#[5f]">rinsingProcessSkip</a> from menuclearing.o(i.rinsingProcessSkip) referenced from menuclearing.o(i.rinsingProcessStart)
 <LI><a href="#[6b]">rinsingProcessStart</a> from menuclearing.o(i.rinsingProcessStart) referenced from menuclearing.o(i.transitionToRinsingMenu)
 <LI><a href="#[26]">setButtonNavigationToChangeValueTemp</a> from menureceptshablon.o(i.setButtonNavigationToChangeValueTemp) referenced 2 times from menureceptshablon.o(.data)
 <LI><a href="#[21]">setButtonNavigationToChangeValueTempRecepte</a> from menureceptcontrol.o(i.setButtonNavigationToChangeValueTempRecepte) referenced 2 times from menureceptcontrol.o(.data)
 <LI><a href="#[29]">setButtonNavigationToChangeValueTempRecepteLoaded</a> from menureceptloaded.o(i.setButtonNavigationToChangeValueTempRecepteLoaded) referenced 2 times from menureceptloaded.o(.data)
 <LI><a href="#[27]">setButtonNavigationToChangeValueTimer</a> from menureceptshablon.o(i.setButtonNavigationToChangeValueTimer) referenced 2 times from menureceptshablon.o(.data)
 <LI><a href="#[22]">setButtonNavigationToChangeValueTimerRecepte</a> from menureceptcontrol.o(i.setButtonNavigationToChangeValueTimerRecepte) referenced 2 times from menureceptcontrol.o(.data)
 <LI><a href="#[2a]">setButtonNavigationToChangeValueTimerRecepteLoaded</a> from menureceptloaded.o(i.setButtonNavigationToChangeValueTimerRecepteLoaded) referenced 2 times from menureceptloaded.o(.data)
 <LI><a href="#[68]">shablonExecute</a> from menureceptshablon.o(i.shablonExecute) referenced from menureceptshablon.o(i.shablonSetFunction)
 <LI><a href="#[28]">shablonSetFunction</a> from menureceptshablon.o(i.shablonSetFunction) referenced 2 times from menureceptshablon.o(.data)
 <LI><a href="#[28]">shablonSetFunction</a> from menureceptshablon.o(i.shablonSetFunction) referenced from menumanualcontrol.o(i.printShablonManalControl)
 <LI><a href="#[17]">startRecepteProcess</a> from menureceptcontrol.o(i.startRecepteProcess) referenced 6 times from menurecept.o(.data)
 <LI><a href="#[18]">startRecepteProcessLoaded</a> from menureceptloaded.o(i.startRecepteProcessLoaded) referenced 6 times from menurecept.o(.data)
 <LI><a href="#[25]">switchStadge</a> from state_machine.o(i.switchStadge) referenced 6 times from menureceptcontrol.o(.data)
 <LI><a href="#[67]">updateRelay</a> from powertuning.o(i.updateRelay) referenced from powertuning.o(i.setPower)
 <LI><a href="#[58]">woshingCancel</a> from menuclearing.o(i.woshingCancel) referenced from menuclearing.o(i.disinfectionProcessStart)
 <LI><a href="#[58]">woshingCancel</a> from menuclearing.o(i.woshingCancel) referenced from menuclearing.o(i.rinsingProcessStart)
 <LI><a href="#[58]">woshingCancel</a> from menuclearing.o(i.woshingCancel) referenced from menuclearing.o(i.transitionToDisinfectionMenu)
 <LI><a href="#[58]">woshingCancel</a> from menuclearing.o(i.woshingCancel) referenced from menuclearing.o(i.transitionToRinsingMenu)
 <LI><a href="#[58]">woshingCancel</a> from menuclearing.o(i.woshingCancel) referenced from menuclearing.o(i.woshingProcessStart)
 <LI><a href="#[69]">woshingComplite</a> from menuclearing.o(i.woshingComplite) referenced from menuclearing.o(i.transitionToCompletionMenu)
 <LI><a href="#[6d]">woshingProcess</a> from menuclearing.o(i.woshingProcess) referenced from menuclearing.o(i.woshingProcessStart)
 <LI><a href="#[5b]">woshingProcessStart</a> from menuclearing.o(i.woshingProcessStart) referenced from menuclearing.o(i.printMenuClearingState_1)
 <LI><a href="#[6c]">woshingSkip</a> from menuclearing.o(i.woshingSkip) referenced from menuclearing.o(i.woshingProcessStart)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[6f]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[70]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[72]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[1c3]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[1c4]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[1c5]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[9b]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[73]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_i &rArr; _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
</UL>

<P><STRONG><a name="[74]"></a>_printf_i</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_i &rArr; _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[76]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
</UL>

<P><STRONG><a name="[78]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent_end
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[79]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[84]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[1c6]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[7b]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[1c7]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[1c8]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[7d]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[1c9]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[1ca]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[1cb]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[1cc]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[1cd]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[7f]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[1ce]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[1cf]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[1d0]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[1d1]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[1d2]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[1d3]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[1d4]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[1d5]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[1d6]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[1d7]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[1d8]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[1d9]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[1da]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[89]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[1db]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[1dc]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[1dd]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[1de]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[1df]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[1e0]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[1e1]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[71]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[1e2]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[81]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[83]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[1e3]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[85]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; initDevice &rArr; tempSensorInit &rArr; DS18B20_ReadScratchpad &rArr; ExecuteCommand &rArr; OneWire_ProcessByte &rArr; OneWire_ProcessBit &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[1e4]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[c5]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[88]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[1e5]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[8a]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[9d]"></a>__aeabi_memcpy4</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[1e6]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text), UNUSED)

<P><STRONG><a name="[2d]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_k1986ve1xi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[1e7]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, maybetermalloc1.o(.emb_text), UNUSED)

<P><STRONG><a name="[c3]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_k1986ve1xi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[8c]"></a>malloc</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, h1_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ReadScratchpad
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ReadRom
</UL>

<P><STRONG><a name="[8f]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ReadScratchpad
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ReadRom
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>

<P><STRONG><a name="[16a]"></a>__aeabi_uldivmod</STRONG> (Thumb, 258 bytes, Stack size 32 bytes, lludiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMainPage
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTimeLoaded
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValueTime
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTime
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printChangeTime
</UL>

<P><STRONG><a name="[1e8]"></a>_ll_udiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, lludiv.o(.text), UNUSED)

<P><STRONG><a name="[90]"></a>__2sprintf</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, __2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMainPage
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRelay
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertToJSON
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTimeRemaining
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTimerStr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTemperatureStr
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printChangeTime
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValueTime
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonExecute
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stateMahineReceptTimerLoaded
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stateMahineReceptTimer
</UL>

<P><STRONG><a name="[93]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
</UL>

<P><STRONG><a name="[94]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
</UL>

<P><STRONG><a name="[92]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[77]"></a>_printf_int_dec</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned (Weak Reference)
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
</UL>

<P><STRONG><a name="[99]"></a>__printf</STRONG> (Thumb, 306 bytes, Stack size 32 bytes, __printf_flags_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[9c]"></a>__aeabi_memcpy</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, rt_memcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Settings
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_WriteScratchpad
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_SkipRom
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ReadScratchpad
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ReadRom
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ConvertT
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startRecepteProcess
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recipe_GetNames
</UL>

<P><STRONG><a name="[1e9]"></a>__rt_memcpy</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, rt_memcpy.o(.text), UNUSED)

<P><STRONG><a name="[9f]"></a>_memset_w</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[9e]"></a>_memset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[a0]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[1ea]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[123]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_cls
</UL>

<P><STRONG><a name="[1eb]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>__rt_memclr_w</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[e0]"></a>__aeabi_uread4</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Stop
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Start
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_SendByte
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Restart
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_ReadByte
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Init
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaudrate
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_InitUart
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
</UL>

<P><STRONG><a name="[1ec]"></a>__rt_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[101]"></a>__aeabi_uwrite4</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uwrite4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_InitUart
</UL>

<P><STRONG><a name="[1ed]"></a>__rt_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[1ee]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[111]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertToJSON
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_Init
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_SectorToPage
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_GetClocksFreq
</UL>

<P><STRONG><a name="[1ef]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMainPage
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRelay
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTimeRemaining
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFermentingAutoResnartLoaded
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionCoolingAutoResnartLoaded
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionBoilingAutoResnartLoaded
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionAutoResnartLoaded
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receptSetFunctionLoaded
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablonRecepteLoaded
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTimeLoaded
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTemperatureLoaded
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValueTime
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValue
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFermentingAutoResnart
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionCoolingAutoResnart
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionBoilingAutoResnart
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionAutoResnart
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receptSetFunction
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablonRecepte
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTime
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTemperature
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printChangeTime
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValueTime
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessCoolingLoaded
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessCooling
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>

<P><STRONG><a name="[1f0]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[6]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[5]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[d4]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ReadScratchpad
</UL>

<P><STRONG><a name="[1f1]"></a>_d2f</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, d2f.o(.text), UNUSED)

<P><STRONG><a name="[d3]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ReadScratchpad
</UL>

<P><STRONG><a name="[1f2]"></a>_dmul</STRONG> (Thumb, 558 bytes, Stack size 56 bytes, dmul.o(.text), UNUSED)

<P><STRONG><a name="[d2]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ReadScratchpad
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertToJSON
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTemperatureStr
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonExecute
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stateMahineReceptTimerLoaded
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stateMahineReceptTimer
</UL>

<P><STRONG><a name="[1f3]"></a>_f2d</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, f2d.o(.text), UNUSED)

<P><STRONG><a name="[13d]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 20 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_compute
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessMashingLoaded
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessFermentingLoaded
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessCoolingLoaded
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessMashing
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessFermenting
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessCooling
</UL>

<P><STRONG><a name="[a3]"></a>_fdiv</STRONG> (Thumb, 334 bytes, Stack size 20 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frdiv
</UL>

<P><STRONG><a name="[a2]"></a>_frdiv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
</UL>

<P><STRONG><a name="[1b1]"></a>__aeabi_f2uiz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_relay_control
</UL>

<P><STRONG><a name="[1f4]"></a>_ffixu</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, ffixui.o(.text), UNUSED)

<P><STRONG><a name="[a5]"></a>__aeabi_i2f_normalise</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[a4]"></a>__aeabi_i2f</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFermentingAutoResnartLoaded
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionCoolingAutoResnartLoaded
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionAutoResnartLoaded
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receptSetFunctionLoaded
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablonRecepteLoaded
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFermentingAutoResnart
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionCoolingAutoResnart
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionAutoResnart
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receptSetFunction
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablonRecepte
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessCoolingLoaded
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessCooling
</UL>

<P><STRONG><a name="[1f5]"></a>_fflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>__aeabi_ui2f</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ReadScratchpad
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_compute
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supportWoshingTemperature
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessMashingLoaded
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessFermentingLoaded
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessCoolingLoaded
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessMashing
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessFermenting
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessCooling
</UL>

<P><STRONG><a name="[1f6]"></a>_ffltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[8d]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[7e]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[1f7]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[1f8]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[f]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[a]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[8e]"></a>__Heap_Full</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[a8]"></a>__Heap_Broken</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[7c]"></a>_init_alloc</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[aa]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[7]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[98]"></a>_printf_int_common</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[1f9]"></a>__lib_sel_fp_printf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>_printf_fp_dec_real</STRONG> (Thumb, 620 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; btod_internal_mul &rArr; __ARM_common_ll_muluu
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf1.o(x$fpl$printf1)
</UL>
<P><STRONG><a name="[91]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[53]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> __2sprintf.o(.text)
</UL>
<P><STRONG><a name="[b3]"></a>_printf_cs_common</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_mbtowc (Weak Reference)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[b5]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[7a]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[97]"></a>__rt_udiv10</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, rtudiv10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[b6]"></a>__fpl_fcmp_InfNaN</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, fcmpin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frcmple
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
</UL>

<P><STRONG><a name="[1fa]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[c2]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[1fb]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[b0]"></a>_ll_udiv10</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[b2]"></a>_printf_fp_infnan</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[ac]"></a>_btod_etento</STRONG> (Thumb, 210 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; btod_internal_mul &rArr; __ARM_common_ll_muluu
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[ad]"></a>_btod_d2e</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, btod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _btod_d2e
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[af]"></a>_btod_emul</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, btod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _btod_emul &rArr; btod_internal_mul &rArr; __ARM_common_ll_muluu
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btod_internal_mul
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>

<P><STRONG><a name="[bc]"></a>_btod_emuld</STRONG> (Thumb, 144 bytes, Stack size 56 bytes, btod.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btod_internal_mul
</UL>

<P><STRONG><a name="[ae]"></a>_btod_ediv</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, btod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _btod_ediv &rArr; btod_internal_div
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btod_internal_div
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>

<P><STRONG><a name="[be]"></a>_btod_edivd</STRONG> (Thumb, 124 bytes, Stack size 56 bytes, btod.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btod_internal_div
</UL>

<P><STRONG><a name="[a9]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[1bc]"></a>strcmp</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[b7]"></a>__fpl_cmpreturn</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, cmpret.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[b8]"></a>__fpl_fcheck_NaN2</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, fnan2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[1fc]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[1fd]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[1fe]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[82]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[87]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[c0]"></a>__sig_exit</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, defsig_exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __sig_exit
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[bf]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[c1]"></a>__fpl_return_NaN</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, retnan.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
</UL>

<P><STRONG><a name="[8b]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[c6]"></a>__default_signal_display</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>

<P><STRONG><a name="[c7]"></a>_ttywrch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sys_wrch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[1ff]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[200]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>ADC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.ADC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>ARINC429R_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.ARINC429R_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>ARINC429T1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.ARINC429T1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>ARINC429T2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.ARINC429T2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>ARINC429T3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.ARINC429T3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>ARINC429T4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.ARINC429T4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>BKP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.BKP_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>BUSY_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.BUSY_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>CAN1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.CAN1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>CAN2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.CAN2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[119]"></a>CRC16_Calculate</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, recipe_manager.o(i.CRC16_Calculate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CRC16_Calculate
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recipe_ReadFromFlash
</UL>

<P><STRONG><a name="[38]"></a>DMA_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.DMA_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[c8]"></a>DS18B20_ConvertT</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, ds18b20.o(i.DS18B20_ConvertT))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = DS18B20_ConvertT &rArr; ExecuteCommand &rArr; OneWire_ProcessByte &rArr; OneWire_ProcessBit &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForConversionFinished
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExecuteCommand
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readTemperature
</UL>

<P><STRONG><a name="[cc]"></a>DS18B20_Init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ds18b20.o(i.DS18B20_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = DS18B20_Init &rArr; OneWire_Init &rArr; OneWire_InitUart &rArr; UART_Init &rArr; RST_CLK_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempSensorInit
</UL>

<P><STRONG><a name="[ce]"></a>DS18B20_InitializationCommand</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ds18b20.o(i.DS18B20_InitializationCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = DS18B20_InitializationCommand &rArr; OneWire_Reset &rArr; SetBaudrate &rArr; UART_Init &rArr; RST_CLK_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempSensorInit
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readTemperature
</UL>

<P><STRONG><a name="[d0]"></a>DS18B20_ReadRom</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, ds18b20.o(i.DS18B20_ReadRom))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = DS18B20_ReadRom &rArr; ExecuteCommand &rArr; OneWire_ProcessByte &rArr; OneWire_ProcessBit &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExecuteCommand
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempSensorInit
</UL>

<P><STRONG><a name="[d1]"></a>DS18B20_ReadScratchpad</STRONG> (Thumb, 220 bytes, Stack size 56 bytes, ds18b20.o(i.DS18B20_ReadScratchpad))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = DS18B20_ReadScratchpad &rArr; ExecuteCommand &rArr; OneWire_ProcessByte &rArr; OneWire_ProcessBit &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExecuteCommand
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempSensorInit
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readTemperature
</UL>

<P><STRONG><a name="[d6]"></a>DS18B20_SkipRom</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, ds18b20.o(i.DS18B20_SkipRom))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = DS18B20_SkipRom &rArr; ExecuteCommand &rArr; OneWire_ProcessByte &rArr; OneWire_ProcessBit &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExecuteCommand
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempSensorInit
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readTemperature
</UL>

<P><STRONG><a name="[d7]"></a>DS18B20_WriteScratchpad</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, ds18b20.o(i.DS18B20_WriteScratchpad))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = DS18B20_WriteScratchpad &rArr; ExecuteCommand &rArr; OneWire_ProcessByte &rArr; OneWire_ProcessBit &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExecuteCommand
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempSensorInit
</UL>

<P><STRONG><a name="[45]"></a>ETHERNET_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.ETHERNET_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>EXT_INT1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.EXT_INT1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>EXT_INT2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.EXT_INT2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>EXT_INT3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.EXT_INT3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>EXT_INT4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.EXT_INT4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[da]"></a>GetRecipePageAddress</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, recipe_manager.o(i.GetRecipePageAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetRecipePageAddress &rArr; W25qxx_SectorToPage
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_SectorToPage
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recipe_StorageInit
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recipe_GetNames
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recipe_ReadFromFlash
</UL>

<P><STRONG><a name="[dc]"></a>HAL_SPI_Receive</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, w25qxx.o(i.HAL_SPI_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_SPI_Receive &rArr; SPI_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_ReadPage
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_IsEmptyPage
</UL>

<P><STRONG><a name="[de]"></a>HAL_UART_Receive</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, mdr32_uart.o(i.HAL_UART_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_UART_Receive
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveData
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetFlagStatus
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_Reset
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_ProcessBit
</UL>

<P><STRONG><a name="[e3]"></a>HAL_UART_Transmit</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, mdr32_uart.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetFlagStatus
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_Reset
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_ProcessBit
</UL>

<P><STRONG><a name="[e5]"></a>HC595_Init</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, hc595.o(i.HC595_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = HC595_Init &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_StructInit
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
</UL>

<P><STRONG><a name="[e9]"></a>HC595_SendByte</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, hc595.o(i.HC595_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HC595_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SetBits
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkSlider
</UL>

<P><STRONG><a name="[2f]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, interrupts.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[eb]"></a>I2Csft_GetAdrReg</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, i2c_soft.o(i.I2Csft_GetAdrReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = I2Csft_GetAdrReg &rArr; I2Csft_SendByte &rArr; PIO_Init_Pin &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Stop
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Start
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_SendByte
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Restart
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_register
</UL>

<P><STRONG><a name="[f1]"></a>I2Csft_Init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, i2c_soft.o(i.I2Csft_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = I2Csft_Init &rArr; PIO_Init_Pin &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIO_Init_Pin
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
</UL>

<P><STRONG><a name="[ef]"></a>I2Csft_ReadByte</STRONG> (Thumb, 348 bytes, Stack size 24 bytes, i2c_soft.o(i.I2Csft_ReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = I2Csft_ReadByte &rArr; PIO_Init_Pin &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIO_SetBits
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIO_ResetBits
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIO_Init_Pin
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Wait
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIO_ReadInputDataBit
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_GetAdrReg
</UL>

<P><STRONG><a name="[ee]"></a>I2Csft_Restart</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, i2c_soft.o(i.I2Csft_Restart))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2Csft_Restart &rArr; PIO_SetBits
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIO_SetBits
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIO_ResetBits
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Wait
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_GetAdrReg
</UL>

<P><STRONG><a name="[f7]"></a>I2Csft_SendAdrReg</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, i2c_soft.o(i.I2Csft_SendAdrReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = I2Csft_SendAdrReg &rArr; I2Csft_SendByte &rArr; PIO_Init_Pin &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Stop
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Start
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_register
</UL>

<P><STRONG><a name="[ed]"></a>I2Csft_SendByte</STRONG> (Thumb, 298 bytes, Stack size 24 bytes, i2c_soft.o(i.I2Csft_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = I2Csft_SendByte &rArr; PIO_Init_Pin &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIO_SetBits
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIO_ResetBits
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIO_Init_Pin
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Wait
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIO_ReadInputDataBit
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_SendAdrReg
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_GetAdrReg
</UL>

<P><STRONG><a name="[f8]"></a>I2Csft_Settings</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, i2c_soft.o(i.I2Csft_Settings))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I2Csft_Settings &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
</UL>

<P><STRONG><a name="[ec]"></a>I2Csft_Start</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, i2c_soft.o(i.I2Csft_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2Csft_Start &rArr; PIO_SetBits
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIO_SetBits
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIO_ResetBits
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Wait
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_SendAdrReg
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_GetAdrReg
</UL>

<P><STRONG><a name="[f0]"></a>I2Csft_Stop</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, i2c_soft.o(i.I2Csft_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2Csft_Stop &rArr; PIO_SetBits
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIO_SetBits
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIO_ResetBits
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Wait
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_SendAdrReg
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_GetAdrReg
</UL>

<P><STRONG><a name="[f4]"></a>I2Csft_Wait</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, i2c_soft.o(i.I2Csft_Wait))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Stop
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Start
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_SendByte
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Restart
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_ReadByte
</UL>

<P><STRONG><a name="[1a5]"></a>MENU_Exec</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, menu.o(i.MENU_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MENU_Exec
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menuNavigation
</UL>

<P><STRONG><a name="[f9]"></a>MENU_Init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, menu.o(i.MENU_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_PrintPtr
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_PrintPage
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMenuMainPage
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMenuReceptLoaded
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMenuReceptInt
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMenuSetting
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMenuReceptMain
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMenuManualControl
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMenuClearingState_1
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFilnrationAutoResnartLoaded
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFermentingAutoResnartLoaded
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionCoolingAutoResnartLoaded
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionBoilingAutoResnartLoaded
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionAutoResnartLoaded
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receptSetFunctionLoaded
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablonRecepteLoaded
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printReceptLoaded
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTimeLoaded
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTemperatureLoaded
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValueTime
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValue
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopProcess
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFilnrationAutoResnart
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFermentingAutoResnart
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionCoolingAutoResnart
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionBoilingAutoResnart
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionAutoResnart
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receptSetFunction
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablonRecepte
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printInsRecept
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTime
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTemperature
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printChangeTime
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeMuteState
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeBtState
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cahageWiFiState
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValueTime
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunction
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablon
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woshingProcessStart
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transitionToRinsingMenu
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transitionToDisinfectionMenu
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transitionToCompletionMenu
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rinsingProcessStart
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disinfectionProcessStart
</UL>

<P><STRONG><a name="[fc]"></a>MENU_Move</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, menu.o(i.MENU_Move))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = MENU_Move &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_PrintPtr
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_PrintPage
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menuNavigation
</UL>

<P><STRONG><a name="[fa]"></a>MENU_PrintPage</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, menu.o(i.MENU_PrintPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_display
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_setFont
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menuNavigation
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_PrintPtr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Move
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
</UL>

<P><STRONG><a name="[fb]"></a>MENU_PrintPtr</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, menu.o(i.MENU_PrintPtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_display
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_PrintPage
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_setFont
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menuNavigation
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Move
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
</UL>

<P><STRONG><a name="[34]"></a>MIL_STD_1553B1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.MIL_STD_1553B1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>MIL_STD_1553B2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.MIL_STD_1553B2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[cd]"></a>OneWire_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, onewire.o(i.OneWire_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = OneWire_Init &rArr; OneWire_InitUart &rArr; UART_Init &rArr; RST_CLK_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_InitUart
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_Init
</UL>

<P><STRONG><a name="[100]"></a>OneWire_InitUart</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, mdr32_uart.o(i.OneWire_InitUart))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = OneWire_InitUart &rArr; UART_Init &rArr; RST_CLK_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_PCLKcmd
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_StructInit
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DeInit
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Cmd
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_BRGInit
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_Init
</UL>

<P><STRONG><a name="[108]"></a>OneWire_ProcessBit</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, onewire.o(i.OneWire_ProcessBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = OneWire_ProcessBit &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_ProcessByte
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForConversionFinished
</UL>

<P><STRONG><a name="[d8]"></a>OneWire_ProcessByte</STRONG> (Thumb, 66 bytes, Stack size 40 bytes, onewire.o(i.OneWire_ProcessByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = OneWire_ProcessByte &rArr; OneWire_ProcessBit &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_ProcessBit
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_Reset
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExecuteCommand
</UL>

<P><STRONG><a name="[cf]"></a>OneWire_Reset</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, onewire.o(i.OneWire_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = OneWire_Reset &rArr; SetBaudrate &rArr; UART_Init &rArr; RST_CLK_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaudrate
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_ProcessByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_InitializationCommand
</UL>

<P><STRONG><a name="[f2]"></a>PIO_Init_Pin</STRONG> (Thumb, 294 bytes, Stack size 32 bytes, mdr32_inout.o(i.PIO_Init_Pin))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = PIO_Init_Pin &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_PCLKcmd
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_SendByte
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_ReadByte
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Init
</UL>

<P><STRONG><a name="[f5]"></a>PIO_ReadInputDataBit</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, mdr32_inout.o(i.PIO_ReadInputDataBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PIO_ReadInputDataBit
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_SendByte
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_ReadByte
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f6]"></a>PIO_ResetBits</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, mdr32_inout.o(i.PIO_ResetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PIO_ResetBits
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Stop
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Start
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_SendByte
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Restart
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_ReadByte
</UL>

<P><STRONG><a name="[f3]"></a>PIO_SetBits</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, mdr32_inout.o(i.PIO_SetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PIO_SetBits
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Stop
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Start
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_SendByte
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Restart
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_ReadByte
</UL>

<P><STRONG><a name="[e7]"></a>PORT_Init</STRONG> (Thumb, 256 bytes, Stack size 60 bytes, mdr32fxqi_port.o(i.PORT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC595_Init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinInit_IN
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIO_Init_Pin
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_InitUart
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initSPI
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initResetPin
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initRelay
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initLCDLed
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initBuzzer
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WiFi_uartInit
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25qxx_spi_Init
</UL>

<P><STRONG><a name="[10a]"></a>PORT_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mdr32fxqi_port.o(i.PORT_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIO_ReadInputDataBit
</UL>

<P><STRONG><a name="[e8]"></a>PORT_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mdr32fxqi_port.o(i.PORT_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC595_SendByte
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC595_Init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIO_ResetBits
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPower
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nasosOff
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heatOff
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;collOff
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRelay
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pump
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_heater
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_cooler
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_setRotation
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_setContrast
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_initCmds
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_displayOn
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendCmd
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_gotoXY
</UL>

<P><STRONG><a name="[ea]"></a>PORT_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mdr32fxqi_port.o(i.PORT_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC595_SendByte
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIO_SetBits
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPower
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRelay
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pump
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_heater
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_cooler
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_setRotation
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_setContrast
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_initCmds
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_displayOn
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_display
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nasosOn
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initLCDLed
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heatOn
</UL>

<P><STRONG><a name="[e6]"></a>PORT_StructInit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, mdr32fxqi_port.o(i.PORT_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC595_Init
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initSPI
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initResetPin
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initRelay
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initLCDLed
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initBuzzer
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25qxx_spi_Init
</UL>

<P><STRONG><a name="[150]"></a>PORT_WriteBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mdr32fxqi_port.o(i.PORT_WriteBit))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
</UL>

<P><STRONG><a name="[3e]"></a>POWER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.POWER_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[10b]"></a>PinInit_IN</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, mdr32_inout.o(i.PinInit_IN))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = PinInit_IN &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_PCLKcmd
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpr121_init
</UL>

<P><STRONG><a name="[186]"></a>RST_CLK_CPU_PLLcmd</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, mdr32fxqi_rst_clk.o(i.RST_CLK_CPU_PLLcmd))
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCLK
</UL>

<P><STRONG><a name="[185]"></a>RST_CLK_CPU_PLLconfig</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, mdr32fxqi_rst_clk.o(i.RST_CLK_CPU_PLLconfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RST_CLK_CPU_PLLconfig
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCLK
</UL>

<P><STRONG><a name="[10c]"></a>RST_CLK_CPU_PLLstatus</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, mdr32fxqi_rst_clk.o(i.RST_CLK_CPU_PLLstatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RST_CLK_CPU_PLLstatus &rArr; RST_CLK_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCLK
</UL>

<P><STRONG><a name="[188]"></a>RST_CLK_CPU_PLLuse</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, mdr32fxqi_rst_clk.o(i.RST_CLK_CPU_PLLuse))
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCLK
</UL>

<P><STRONG><a name="[187]"></a>RST_CLK_CPUclkPrescaler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mdr32fxqi_rst_clk.o(i.RST_CLK_CPUclkPrescaler))
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCLK
</UL>

<P><STRONG><a name="[189]"></a>RST_CLK_CPUclkSelection</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, mdr32fxqi_rst_clk.o(i.RST_CLK_CPUclkSelection))
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCLK
</UL>

<P><STRONG><a name="[10e]"></a>RST_CLK_DeInit</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, mdr32fxqi_rst_clk.o(i.RST_CLK_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RST_CLK_DeInit &rArr; RST_CLK_WarmDeInit &rArr; RST_CLK_HSIstatus &rArr; RST_CLK_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_WarmDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCLK
</UL>

<P><STRONG><a name="[110]"></a>RST_CLK_GetClocksFreq</STRONG> (Thumb, 494 bytes, Stack size 64 bytes, mdr32fxqi_rst_clk.o(i.RST_CLK_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = RST_CLK_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[10d]"></a>RST_CLK_GetFlagStatus</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, mdr32fxqi_rst_clk.o(i.RST_CLK_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RST_CLK_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_HSEstatus
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPU_PLLstatus
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_HSIstatus
</UL>

<P><STRONG><a name="[184]"></a>RST_CLK_HSEconfig</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, mdr32fxqi_rst_clk.o(i.RST_CLK_HSEconfig))
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCLK
</UL>

<P><STRONG><a name="[112]"></a>RST_CLK_HSEstatus</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, mdr32fxqi_rst_clk.o(i.RST_CLK_HSEstatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RST_CLK_HSEstatus &rArr; RST_CLK_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCLK
</UL>

<P><STRONG><a name="[114]"></a>RST_CLK_HSIcmd</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, mdr32fxqi_rst_clk.o(i.RST_CLK_HSIcmd))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_WarmDeInit
</UL>

<P><STRONG><a name="[113]"></a>RST_CLK_HSIstatus</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, mdr32fxqi_rst_clk.o(i.RST_CLK_HSIstatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RST_CLK_HSIstatus &rArr; RST_CLK_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_WarmDeInit
</UL>

<P><STRONG><a name="[102]"></a>RST_CLK_PCLKcmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, mdr32fxqi_rst_clk.o(i.RST_CLK_PCLKcmd))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinInit_IN
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIO_Init_Pin
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaudrate
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_InitUart
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMainTimer
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCLK
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initBuzerTimer
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WiFi_uartInit
</UL>

<P><STRONG><a name="[10f]"></a>RST_CLK_WarmDeInit</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, mdr32fxqi_rst_clk.o(i.RST_CLK_WarmDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RST_CLK_WarmDeInit &rArr; RST_CLK_HSIstatus &rArr; RST_CLK_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_HSIstatus
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_HSIcmd
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_DeInit
</UL>

<P><STRONG><a name="[1b2]"></a>Recipe_GetCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, recipe_manager.o(i.Recipe_GetCount))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMenuReceptLoaded
</UL>

<P><STRONG><a name="[115]"></a>Recipe_GetNames</STRONG> (Thumb, 168 bytes, Stack size 160 bytes, recipe_manager.o(i.Recipe_GetNames))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = Recipe_GetNames &rArr; W25qxx_IsEmptyPage &rArr; HAL_SPI_Receive &rArr; SPI_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_ReadPage
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_IsEmptyPage
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecipePageAddress
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMenuReceptLoaded
</UL>

<P><STRONG><a name="[118]"></a>Recipe_ReadFromFlash</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, recipe_manager.o(i.Recipe_ReadFromFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Recipe_ReadFromFlash &rArr; W25qxx_ReadPage &rArr; HAL_SPI_Receive &rArr; SPI_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_ReadPage
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecipePageAddress
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16_Calculate
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startRecepteProcessLoaded
</UL>

<P><STRONG><a name="[11a]"></a>Recipe_StorageInit</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, recipe_manager.o(i.Recipe_StorageInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Recipe_StorageInit &rArr; W25qxx_IsEmptyPage &rArr; HAL_SPI_Receive &rArr; SPI_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_IsEmptyPage
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecipePageAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMenuReceptLoaded
</UL>

<P><STRONG><a name="[dd]"></a>SPI_transmit</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, w25qxx_spi.o(i.SPI_transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_SendData
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_GetFlagStatus
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_ReceiveData
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_Spi
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
</UL>

<P><STRONG><a name="[3b]"></a>SSP1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.SSP1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>SSP2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.SSP2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>SSP3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.SSP3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[197]"></a>SSP_BRGInit</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, mdr32fxqi_ssp.o(i.SSP_BRGInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SSP_BRGInit
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initSPI
</UL>

<P><STRONG><a name="[19a]"></a>SSP_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mdr32fxqi_ssp.o(i.SSP_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initSPI
</UL>

<P><STRONG><a name="[196]"></a>SSP_DeInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mdr32fxqi_ssp.o(i.SSP_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initSPI
</UL>

<P><STRONG><a name="[11c]"></a>SSP_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mdr32fxqi_ssp.o(i.SSP_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendSPI
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_transmit
</UL>

<P><STRONG><a name="[199]"></a>SSP_Init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, mdr32fxqi_ssp.o(i.SSP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SSP_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initSPI
</UL>

<P><STRONG><a name="[11d]"></a>SSP_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mdr32fxqi_ssp.o(i.SSP_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendSPI
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_transmit
</UL>

<P><STRONG><a name="[11b]"></a>SSP_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mdr32fxqi_ssp.o(i.SSP_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendSPI
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_transmit
</UL>

<P><STRONG><a name="[198]"></a>SSP_StructInit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, mdr32fxqi_ssp.o(i.SSP_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initSPI
</UL>

<P><STRONG><a name="[11e]"></a>ST7567_FB_align_text</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, st7567_fb.o(i.ST7567_FB_align_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ST7567_FB_align_text &rArr; ST7567_FB_strWidth &rArr; ST7567_FB_charWidth
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_strWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMainPage
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTimeRemaining
</UL>

<P><STRONG><a name="[130]"></a>ST7567_FB_charWidth</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, st7567_fb.o(i.ST7567_FB_charWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ST7567_FB_charWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_strWidth
</UL>

<P><STRONG><a name="[120]"></a>ST7567_FB_clerBitmap</STRONG> (Thumb, 30 bytes, Stack size 28 bytes, st7567_fb.o(i.ST7567_FB_clerBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ST7567_FB_clerBitmap &rArr; _ST7567_FB_clerBitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ST7567_FB_clerBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMainPage
</UL>

<P><STRONG><a name="[122]"></a>ST7567_FB_cls</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, st7567_fb.o(i.ST7567_FB_cls))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ST7567_FB_cls
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printTempSensorError
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMenuClearingState_1
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woshingProcessStart
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woshingCancel
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transitionToRinsingMenu
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transitionToDisinfectionMenu
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transitionToCompletionMenu
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rinsingProcessStart
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;returnMenuClearingState_1
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disinfectionProcessStart
</UL>

<P><STRONG><a name="[ff]"></a>ST7567_FB_display</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, st7567_fb.o(i.ST7567_FB_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ST7567_FB_display &rArr; ST7567_FB_gotoXY &rArr; sendCmd &rArr; sendSPI
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SetBits
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendSPI
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_gotoXY
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printTempSensorError
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMainPage
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allMenuTextClear
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRelay
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_PrintPtr
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_PrintPage
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMenuClearingState_1
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTimeLoaded
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTemperatureLoaded
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValueTime
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValue
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTime
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTemperature
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printChangeTime
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValueTime
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woshingProcessStart
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woshingProcess
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rinsingProcessStart
</UL>

<P><STRONG><a name="[126]"></a>ST7567_FB_displayOn</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, st7567_fb.o(i.ST7567_FB_displayOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ST7567_FB_displayOn &rArr; sendCmd &rArr; sendSPI
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SetBits
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
</UL>

<P><STRONG><a name="[128]"></a>ST7567_FB_drawBitmap</STRONG> (Thumb, 40 bytes, Stack size 36 bytes, st7567_fb.o(i.ST7567_FB_drawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = ST7567_FB_drawBitmap &rArr; _ST7567_FB_drawBitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ST7567_FB_drawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMainPage
</UL>

<P><STRONG><a name="[12a]"></a>ST7567_FB_drawLineH</STRONG> (Thumb, 60 bytes, Stack size 36 bytes, st7567_fb.o(i.ST7567_FB_drawLineH))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ST7567_FB_drawLineH &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_drawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMainPage
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
</UL>

<P><STRONG><a name="[12b]"></a>ST7567_FB_drawPixel</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, st7567_fb.o(i.ST7567_FB_drawPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ST7567_FB_drawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_drawLineH
</UL>

<P><STRONG><a name="[12c]"></a>ST7567_FB_fillRect</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, st7567_fb.o(i.ST7567_FB_fillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ST7567_FB_fillRect &rArr; ST7567_FB_drawLineH &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_drawLineH
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMainPage
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allMenuTextClear
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRelay
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTimeRemaining
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFilnrationAutoResnartLoaded
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFermentingAutoResnartLoaded
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionCoolingAutoResnartLoaded
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionBoilingAutoResnartLoaded
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionAutoResnartLoaded
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receptSetFunctionLoaded
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTimeLoaded
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTemperatureLoaded
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonPrintCurrentData
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValueTime
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValue
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopProcess
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFilnrationAutoResnart
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFermentingAutoResnart
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionCoolingAutoResnart
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionBoilingAutoResnart
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionAutoResnart
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receptSetFunction
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTime
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTemperature
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValueTime
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunction
</UL>

<P><STRONG><a name="[124]"></a>ST7567_FB_gotoXY</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, st7567_fb.o(i.ST7567_FB_gotoXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ST7567_FB_gotoXY &rArr; sendCmd &rArr; sendSPI
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_display
</UL>

<P><STRONG><a name="[12d]"></a>ST7567_FB_initCmds</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, st7567_fb.o(i.ST7567_FB_initCmds))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ST7567_FB_initCmds &rArr; sendCmd &rArr; sendSPI
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SetBits
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
</UL>

<P><STRONG><a name="[fe]"></a>ST7567_FB_printText</STRONG> (Thumb, 532 bytes, Stack size 96 bytes, st7567_fb.o(i.ST7567_FB_printText))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_drawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printTempSensorError
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMainPage
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRelay
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTimeRemaining
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMenuReceptLoaded
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_PrintPtr
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_PrintPage
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMenuClearingState_1
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFilnrationAutoResnartLoaded
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFermentingAutoResnartLoaded
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionCoolingAutoResnartLoaded
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionBoilingAutoResnartLoaded
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionAutoResnartLoaded
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receptSetFunctionLoaded
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablonRecepteLoaded
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTimeLoaded
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTemperatureLoaded
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonPrintCurrentData
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValueTime
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValue
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFilnrationAutoResnart
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFermentingAutoResnart
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionCoolingAutoResnart
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionBoilingAutoResnart
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionAutoResnart
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receptSetFunction
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablonRecepte
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTime
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTemperature
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printChangeTime
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValueTime
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablon
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woshingProcessStart
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transitionToRinsingMenu
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transitionToDisinfectionMenu
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transitionToCompletionMenu
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rinsingProcessStart
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disinfectionProcessStart
</UL>

<P><STRONG><a name="[12e]"></a>ST7567_FB_setContrast</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, st7567_fb.o(i.ST7567_FB_setContrast))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ST7567_FB_setContrast &rArr; sendCmd &rArr; sendSPI
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SetBits
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
</UL>

<P><STRONG><a name="[fd]"></a>ST7567_FB_setFont</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, st7567_fb.o(i.ST7567_FB_setFont))
<BR><BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMainPage
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMenuReceptInt
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_PrintPtr
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_PrintPage
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMenuSetting
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMenuReceptMain
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMenuManualControl
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMenuClearingState_1
</UL>

<P><STRONG><a name="[12f]"></a>ST7567_FB_setRotation</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, st7567_fb.o(i.ST7567_FB_setRotation))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ST7567_FB_setRotation &rArr; sendCmd &rArr; sendSPI
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SetBits
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
</UL>

<P><STRONG><a name="[11f]"></a>ST7567_FB_strWidth</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, st7567_fb.o(i.ST7567_FB_strWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ST7567_FB_strWidth &rArr; ST7567_FB_charWidth
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_charWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_align_text
</UL>

<P><STRONG><a name="[30]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[109]"></a>SetBaudrate</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, mdr32_uart.o(i.SetBaudrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SetBaudrate &rArr; UART_Init &rArr; RST_CLK_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_PCLKcmd
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Cmd
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_BRGInit
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_Reset
</UL>

<P><STRONG><a name="[5d]"></a>StateMachine_Process</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, state_machine.o(i.StateMachine_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = StateMachine_Process &rArr; StateMachine_ProcessMashing &rArr; shablonSetFunctionAutoResnart &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessMashing
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessLautering
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessFermenting
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessCooling
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessBoiling
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menureceptcontrol.o(i.receptSetFunction)
</UL>
<P><STRONG><a name="[134]"></a>StateMachine_ProcessBoiling</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, state_machine.o(i.StateMachine_ProcessBoiling))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = StateMachine_ProcessBoiling &rArr; shablonSetFunctionCoolingAutoResnart &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionCoolingAutoResnart
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stateMahineReceptTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_Process
</UL>

<P><STRONG><a name="[13a]"></a>StateMachine_ProcessBoilingLoaded</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, state_machineloaded.o(i.StateMachine_ProcessBoilingLoaded))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = StateMachine_ProcessBoilingLoaded &rArr; shablonSetFunctionCoolingAutoResnartLoaded &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionCoolingAutoResnartLoaded
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stateMahineReceptTimerLoaded
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_Process_Loaded
</UL>

<P><STRONG><a name="[135]"></a>StateMachine_ProcessCooling</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, state_machine.o(i.StateMachine_ProcessCooling))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = StateMachine_ProcessCooling &rArr; shablonSetFunctionFermentingAutoResnart &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFermentingAutoResnart
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stateMahineReceptTimer
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_Process
</UL>

<P><STRONG><a name="[140]"></a>StateMachine_ProcessCoolingLoaded</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, state_machineloaded.o(i.StateMachine_ProcessCoolingLoaded))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = StateMachine_ProcessCoolingLoaded &rArr; shablonSetFunctionFermentingAutoResnartLoaded &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFermentingAutoResnartLoaded
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stateMahineReceptTimerLoaded
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_Process_Loaded
</UL>

<P><STRONG><a name="[136]"></a>StateMachine_ProcessFermenting</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, state_machine.o(i.StateMachine_ProcessFermenting))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = StateMachine_ProcessFermenting &rArr; stopProcess &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopProcess
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stateMahineReceptTimer
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_Process
</UL>

<P><STRONG><a name="[143]"></a>StateMachine_ProcessFermentingLoaded</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, state_machineloaded.o(i.StateMachine_ProcessFermentingLoaded))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = StateMachine_ProcessFermentingLoaded &rArr; stopProcess &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopProcess
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stateMahineReceptTimerLoaded
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_Process_Loaded
</UL>

<P><STRONG><a name="[133]"></a>StateMachine_ProcessLautering</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, state_machine.o(i.StateMachine_ProcessLautering))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = StateMachine_ProcessLautering &rArr; shablonSetFunctionBoilingAutoResnart &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nasosOn
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionBoilingAutoResnart
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stateMahineReceptTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_Process
</UL>

<P><STRONG><a name="[146]"></a>StateMachine_ProcessLauteringLoaded</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, state_machineloaded.o(i.StateMachine_ProcessLauteringLoaded))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = StateMachine_ProcessLauteringLoaded &rArr; shablonSetFunctionBoilingAutoResnartLoaded &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nasosOn
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionBoilingAutoResnartLoaded
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stateMahineReceptTimerLoaded
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_Process_Loaded
</UL>

<P><STRONG><a name="[132]"></a>StateMachine_ProcessMashing</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, state_machine.o(i.StateMachine_ProcessMashing))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = StateMachine_ProcessMashing &rArr; shablonSetFunctionAutoResnart &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFilnrationAutoResnart
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionAutoResnart
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stateMahineReceptTimer
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_Process
</UL>

<P><STRONG><a name="[14a]"></a>StateMachine_ProcessMashingLoaded</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, state_machineloaded.o(i.StateMachine_ProcessMashingLoaded))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = StateMachine_ProcessMashingLoaded &rArr; shablonSetFunctionAutoResnartLoaded &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFilnrationAutoResnartLoaded
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionAutoResnartLoaded
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stateMahineReceptTimerLoaded
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_Process_Loaded
</UL>

<P><STRONG><a name="[5e]"></a>StateMachine_Process_Loaded</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, state_machineloaded.o(i.StateMachine_Process_Loaded))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = StateMachine_Process_Loaded &rArr; StateMachine_ProcessMashingLoaded &rArr; shablonSetFunctionAutoResnartLoaded &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessMashingLoaded
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessLauteringLoaded
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessFermentingLoaded
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessCoolingLoaded
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessBoilingLoaded
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menureceptloaded.o(i.receptSetFunctionLoaded)
</UL>
<P><STRONG><a name="[1b6]"></a>StateMachine_Process_Start</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, state_machine.o(i.StateMachine_Process_Start))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receptSetFunction
</UL>

<P><STRONG><a name="[1b7]"></a>StateMachine_Process_Start_Loaded</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, state_machineloaded.o(i.StateMachine_Process_Start_Loaded))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receptSetFunctionLoaded
</UL>

<P><STRONG><a name="[19d]"></a>StateMachine_Process_Stop</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, state_machine.o(i.StateMachine_Process_Stop))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receptSetFunction
</UL>

<P><STRONG><a name="[19e]"></a>StateMachine_Process_Stop_Loaded</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, state_machineloaded.o(i.StateMachine_Process_Stop_Loaded))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receptSetFunctionLoaded
</UL>

<P><STRONG><a name="[32]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[14d]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, system_k1986ve1xi.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMainTimer
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCLK
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initBuzerTimer
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[51]"></a>SystemInit</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, system_k1986ve1xi.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SystemInit &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(.text)
</UL>
<P><STRONG><a name="[41]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, interrupts.o(i.TIMER1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIMER1_IRQHandler &rArr; TIMER_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_GetITStatus
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, interrupts.o(i.TIMER2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIMER2_IRQHandler &rArr; TIMER_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_GetITStatus
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_ClearFlag
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_WriteBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.TIMER3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIMER4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.TIMER4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[17f]"></a>TIMER_BRGInit</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, mdr32fxqi_timer.o(i.TIMER_BRGInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER_BRGInit
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMainTimer
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initBuzerTimer
</UL>

<P><STRONG><a name="[14f]"></a>TIMER_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mdr32fxqi_timer.o(i.TIMER_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
</UL>

<P><STRONG><a name="[181]"></a>TIMER_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, mdr32fxqi_timer.o(i.TIMER_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMainTimer
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initBuzerTimer
</UL>

<P><STRONG><a name="[17e]"></a>TIMER_CntInit</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, mdr32fxqi_timer.o(i.TIMER_CntInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIMER_CntInit
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMainTimer
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initBuzerTimer
</UL>

<P><STRONG><a name="[17d]"></a>TIMER_DeInit</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, mdr32fxqi_timer.o(i.TIMER_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMainTimer
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initBuzerTimer
</UL>

<P><STRONG><a name="[14e]"></a>TIMER_GetITStatus</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, mdr32fxqi_timer.o(i.TIMER_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
</UL>

<P><STRONG><a name="[180]"></a>TIMER_ITConfig</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mdr32fxqi_timer.o(i.TIMER_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMainTimer
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initBuzerTimer
</UL>

<P><STRONG><a name="[39]"></a>UART1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.UART1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>UART2_IRQHandler</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, interrupts.o(i.UART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART2_IRQHandler &rArr; uart_receive_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_receive_byte
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveData
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ITConfig
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetITStatus
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ClearITPendingBit
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[106]"></a>UART_BRGInit</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, mdr32fxqi_uart.o(i.UART_BRGInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_BRGInit
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaudrate
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_InitUart
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WiFi_uartInit
</UL>

<P><STRONG><a name="[153]"></a>UART_ClearITPendingBit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mdr32fxqi_uart.o(i.UART_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>

<P><STRONG><a name="[107]"></a>UART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mdr32fxqi_uart.o(i.UART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaudrate
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_InitUart
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WiFi_uartInit
</UL>

<P><STRONG><a name="[103]"></a>UART_DeInit</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, mdr32fxqi_uart.o(i.UART_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_InitUart
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WiFi_uartInit
</UL>

<P><STRONG><a name="[e1]"></a>UART_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mdr32fxqi_uart.o(i.UART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
</UL>

<P><STRONG><a name="[151]"></a>UART_GetITStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mdr32fxqi_uart.o(i.UART_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>

<P><STRONG><a name="[154]"></a>UART_ITConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, mdr32fxqi_uart.o(i.UART_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendStatus
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WiFi_uartInit
</UL>

<P><STRONG><a name="[105]"></a>UART_Init</STRONG> (Thumb, 186 bytes, Stack size 64 bytes, mdr32fxqi_uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = UART_Init &rArr; RST_CLK_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_GetClocksFreq
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaudrate
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_InitUart
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WiFi_uartInit
</UL>

<P><STRONG><a name="[e2]"></a>UART_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mdr32fxqi_uart.o(i.UART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
</UL>

<P><STRONG><a name="[e4]"></a>UART_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mdr32fxqi_uart.o(i.UART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendStatus
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>

<P><STRONG><a name="[104]"></a>UART_StructInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, mdr32fxqi_uart.o(i.UART_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_InitUart
</UL>

<P><STRONG><a name="[192]"></a>UART_TxBuffer_Init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal.o(i.UART_TxBuffer_Init))
<BR><BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
</UL>

<P><STRONG><a name="[35]"></a>USB_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.USB_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[155]"></a>W25qxx_Init</STRONG> (Thumb, 320 bytes, Stack size 8 bytes, w25qxx.o(i.W25qxx_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = W25qxx_Init &rArr; W25qxx_ReadID &rArr; W25qxx_Spi &rArr; SPI_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_SPI_DisableSS_m
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_ReadUniqID
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_ReadStatusRegister
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_ReadID
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashInit
</UL>

<P><STRONG><a name="[116]"></a>W25qxx_IsEmptyPage</STRONG> (Thumb, 362 bytes, Stack size 64 bytes, w25qxx.o(i.W25qxx_IsEmptyPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = W25qxx_IsEmptyPage &rArr; HAL_SPI_Receive &rArr; SPI_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_Spi
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_SPI_EnableSS_m
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_SPI_DisableSS_m
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recipe_StorageInit
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recipe_GetNames
</UL>

<P><STRONG><a name="[157]"></a>W25qxx_ReadID</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, w25qxx.o(i.W25qxx_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = W25qxx_ReadID &rArr; W25qxx_Spi &rArr; SPI_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_Spi
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_SPI_EnableSS_m
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_SPI_DisableSS_m
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_Init
</UL>

<P><STRONG><a name="[117]"></a>W25qxx_ReadPage</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, w25qxx.o(i.W25qxx_ReadPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = W25qxx_ReadPage &rArr; HAL_SPI_Receive &rArr; SPI_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_Spi
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_SPI_EnableSS_m
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_SPI_DisableSS_m
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recipe_GetNames
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recipe_ReadFromFlash
</UL>

<P><STRONG><a name="[159]"></a>W25qxx_ReadStatusRegister</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, w25qxx.o(i.W25qxx_ReadStatusRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = W25qxx_ReadStatusRegister &rArr; W25qxx_Spi &rArr; SPI_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_Spi
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_SPI_EnableSS_m
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_SPI_DisableSS_m
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_Init
</UL>

<P><STRONG><a name="[158]"></a>W25qxx_ReadUniqID</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, w25qxx.o(i.W25qxx_ReadUniqID))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = W25qxx_ReadUniqID &rArr; W25qxx_Spi &rArr; SPI_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_Spi
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_SPI_EnableSS_m
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_SPI_DisableSS_m
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_Init
</UL>

<P><STRONG><a name="[156]"></a>W25qxx_SPI_DisableSS_m</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, w25qxx.o(i.W25qxx_SPI_DisableSS_m))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_ReadUniqID
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_ReadStatusRegister
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_ReadID
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_Init
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_ReadPage
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_IsEmptyPage
</UL>

<P><STRONG><a name="[15a]"></a>W25qxx_SPI_EnableSS_m</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, w25qxx.o(i.W25qxx_SPI_EnableSS_m))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_ReadUniqID
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_ReadStatusRegister
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_ReadID
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_ReadPage
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_IsEmptyPage
</UL>

<P><STRONG><a name="[15c]"></a>W25qxx_SPI_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, w25qxx.o(i.W25qxx_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = W25qxx_SPI_Init &rArr; w25qxx_spi_Init &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;w25qxx_spi_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashInit
</UL>

<P><STRONG><a name="[db]"></a>W25qxx_SectorToPage</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, w25qxx.o(i.W25qxx_SectorToPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = W25qxx_SectorToPage
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecipePageAddress
</UL>

<P><STRONG><a name="[15b]"></a>W25qxx_Spi</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, w25qxx.o(i.W25qxx_Spi))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = W25qxx_Spi &rArr; SPI_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_ReadUniqID
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_ReadStatusRegister
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_ReadID
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_ReadPage
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_IsEmptyPage
</UL>

<P><STRONG><a name="[3f]"></a>WWDG_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts.o(i.WWDG_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_k1986ve1xi.o(RESET)
</UL>
<P><STRONG><a name="[15e]"></a>WiFi_uartInit</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, hal.o(i.WiFi_uartInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WiFi_uartInit &rArr; UART_Init &rArr; RST_CLK_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_PCLKcmd
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ITConfig
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DeInit
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Cmd
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_BRGInit
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
</UL>

<P><STRONG><a name="[121]"></a>_ST7567_FB_clerBitmap</STRONG> (Thumb, 352 bytes, Stack size 52 bytes, st7567_fb.o(i._ST7567_FB_clerBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _ST7567_FB_clerBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_clerBitmap
</UL>

<P><STRONG><a name="[129]"></a>_ST7567_FB_drawBitmap</STRONG> (Thumb, 574 bytes, Stack size 56 bytes, st7567_fb.o(i._ST7567_FB_drawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ST7567_FB_drawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_drawBitmap
</UL>

<P><STRONG><a name="[bb]"></a>__ARM_common_ll_muluu</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, btod.o(i.__ARM_common_ll_muluu))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __ARM_common_ll_muluu
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btod_internal_mul
</UL>

<P><STRONG><a name="[131]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, menureceptshablon.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_Process_Loaded
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchStadge
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_Process
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablon
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_Init
</UL>

<P><STRONG><a name="[b1]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[9a]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[1e]"></a>allMenuTextClear</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, mainpage.o(i.allMenuTextClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = allMenuTextClear &rArr; ST7567_FB_fillRect &rArr; ST7567_FB_drawLineH &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_display
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPower
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMenuReceptLoaded
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMenuReceptInt
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMenuSetting
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMenuReceptMain
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMenuManualControl
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablonRecepteLoaded
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printReceptLoaded
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablonRecepte
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printInsRecept
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printChangeTime
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeMuteState
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeBtState
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cahageWiFiState
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablon
</UL>
<BR>[Address Reference Count : 3]<UL><LI> menurecept.o(i.printMenuReceptMain)
<LI> menusetting.o(.data)
<LI> menumanualcontrol.o(i.printMenuManualControl)
</UL>
<P><STRONG><a name="[138]"></a>beep</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, hal.o(i.beep))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = beep
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonExecute
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stateMahineReceptTimerLoaded
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessMashingLoaded
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessLauteringLoaded
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessFermentingLoaded
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessCoolingLoaded
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessBoilingLoaded
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stateMahineReceptTimer
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessMashing
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessLautering
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessFermenting
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessCooling
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessBoiling
</UL>

<P><STRONG><a name="[1b]"></a>cahageWiFiState</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, menusetting.o(i.cahageWiFiState))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = cahageWiFiState &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allMenuTextClear
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menusetting.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>changeBtState</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, menusetting.o(i.changeBtState))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = changeBtState &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allMenuTextClear
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menusetting.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>changeMuteState</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, menusetting.o(i.changeMuteState))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = changeMuteState &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allMenuTextClear
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menusetting.o(.data)
</UL>
<P><STRONG><a name="[160]"></a>changeReceptValueTemperature</STRONG> (Thumb, 404 bytes, Stack size 24 bytes, menureceptcontrol.o(i.changeReceptValueTemperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = changeReceptValueTemperature &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_set_setpoint
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_display
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTemperatureStr
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuNavigationToChangeValueRecepte
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menuChangeDataFunctionTempRecepte
</UL>

<P><STRONG><a name="[166]"></a>changeReceptValueTemperatureLoaded</STRONG> (Thumb, 404 bytes, Stack size 24 bytes, menureceptloaded.o(i.changeReceptValueTemperatureLoaded))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = changeReceptValueTemperatureLoaded &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_set_setpoint
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_display
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuNavigationToChangeValueRecepteLoaded
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTemperatureStr
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menuChangeDataFunctionTempRecepteLoaded
</UL>

<P><STRONG><a name="[168]"></a>changeReceptValueTime</STRONG> (Thumb, 806 bytes, Stack size 24 bytes, menureceptcontrol.o(i.changeReceptValueTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = changeReceptValueTime &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_display
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTimerStr
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuNavigationToChangeValueRecepte
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menuChangeDataFunctionTimerRecepte
</UL>

<P><STRONG><a name="[16b]"></a>changeReceptValueTimeLoaded</STRONG> (Thumb, 806 bytes, Stack size 24 bytes, menureceptloaded.o(i.changeReceptValueTimeLoaded))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = changeReceptValueTimeLoaded &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_display
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuNavigationToChangeValueRecepteLoaded
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTimerStr
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menuChangeDataFunctionTimerRecepteLoaded
</UL>

<P><STRONG><a name="[16c]"></a>changeValue</STRONG> (Thumb, 404 bytes, Stack size 24 bytes, menureceptshablon.o(i.changeValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = changeValue &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_set_setpoint
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_display
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuNavigationToChangeValue
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTemperatureStr
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menuChangeDataFunctionTemp
</UL>

<P><STRONG><a name="[16f]"></a>changeValueTime</STRONG> (Thumb, 806 bytes, Stack size 24 bytes, menureceptshablon.o(i.changeValueTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = changeValueTime &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_display
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuNavigationToChangeValue
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTimerStr
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menuChangeDataFunctionTimer
</UL>

<P><STRONG><a name="[170]"></a>checkSlider</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, slider.o(i.checkSlider))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = checkSlider &rArr; HC595_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC595_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[171]"></a>collOff</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hal.o(i.collOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = collOff
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woshingCancel
</UL>

<P><STRONG><a name="[178]"></a>configureMenuButtons</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, menu.o(i.configureMenuButtons))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = configureMenuButtons
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMenuClearingState_1
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woshingProcessStart
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transitionToRinsingMenu
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transitionToDisinfectionMenu
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rinsingProcessStart
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disinfectionProcessStart
</UL>

<P><STRONG><a name="[172]"></a>convertToJSON</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, json.o(i.convertToJSON))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = convertToJSON &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getGlobalTime
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendStatus
</UL>

<P><STRONG><a name="[cb]"></a>delay_ms</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, delay.o(i.delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ConvertT
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpr121_init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonExecute
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_Init
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessFermentingLoaded
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_ReadPage
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_IsEmptyPage
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessFermenting
</UL>

<P><STRONG><a name="[56]"></a>disinfection</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, menuclearing.o(i.disinfection))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = disinfection &rArr; transitionToCompletionMenu &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nasosOff
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nasosOn
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTimeRemaining
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transitionToCompletionMenu
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supportWoshingTemperature
</UL>
<BR>[Address Reference Count : 2]<UL><LI> menuclearing.o(i.disinfectionProcessSkip)
<LI> menuclearing.o(i.disinfectionProcessStart)
</UL>
<P><STRONG><a name="[57]"></a>disinfectionProcessSkip</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, menuclearing.o(i.disinfectionProcessSkip))
<BR>[Address Reference Count : 1]<UL><LI> menuclearing.o(i.disinfectionProcessStart)
</UL>
<P><STRONG><a name="[6a]"></a>disinfectionProcessStart</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, menuclearing.o(i.disinfectionProcessStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = disinfectionProcessStart &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_cls
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configureMenuButtons
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menuclearing.o(i.transitionToDisinfectionMenu)
</UL>
<P><STRONG><a name="[179]"></a>flashInit</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, flashcontroller.o(i.flashInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = flashInit &rArr; W25qxx_SPI_Init &rArr; w25qxx_spi_Init &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_SPI_Init
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
</UL>

<P><STRONG><a name="[59]"></a>functionNull</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal.o(i.functionNull))
<BR>[Address Reference Count : 10]<UL><LI> main.o(i.main)
<LI> powertuning.o(i.setPower)
<LI> menuclearing.o(i.transitionToCompletionMenu)
<LI> menuclearing.o(i.transitionToDisinfectionMenu)
<LI> menuclearing.o(i.transitionToRinsingMenu)
<LI> menuclearing.o(i.woshingCancel)
<LI> menureceptcontrol.o(i.receptSetFunction)
<LI> menureceptloaded.o(i.receptSetFunctionLoaded)
<LI> menureceptcontrol.o(i.stopProcess)
<LI> menureceptshablon.o(i.shablonSetFunction)
</UL>
<P><STRONG><a name="[173]"></a>getGlobalTime</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, delay.o(i.getGlobalTime))
<BR><BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMainPage
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertToJSON
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printChangeTime
</UL>

<P><STRONG><a name="[161]"></a>getTemperatureStr</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, menureceptshablon.o(i.getTemperatureStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = getTemperatureStr &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFilnrationAutoResnartLoaded
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFermentingAutoResnartLoaded
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionCoolingAutoResnartLoaded
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionBoilingAutoResnartLoaded
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionAutoResnartLoaded
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablonRecepteLoaded
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTemperatureLoaded
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValue
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFilnrationAutoResnart
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFermentingAutoResnart
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionCoolingAutoResnart
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionBoilingAutoResnart
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionAutoResnart
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablonRecepte
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTemperature
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablon
</UL>

<P><STRONG><a name="[169]"></a>getTimerStr</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, menureceptshablon.o(i.getTimerStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = getTimerStr &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFilnrationAutoResnartLoaded
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFermentingAutoResnartLoaded
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionCoolingAutoResnartLoaded
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionBoilingAutoResnartLoaded
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionAutoResnartLoaded
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablonRecepteLoaded
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTimeLoaded
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValueTime
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFilnrationAutoResnart
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFermentingAutoResnart
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionCoolingAutoResnart
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionBoilingAutoResnart
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionAutoResnart
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablonRecepte
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTime
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablon
</UL>

<P><STRONG><a name="[1b0]"></a>get_temperature</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pid.o(i.get_temperature))
<BR><BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_relay_control
</UL>

<P><STRONG><a name="[17a]"></a>heatOff</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, hal.o(i.heatOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = heatOff
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woshingCancel
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supportWoshingTemperature
</UL>

<P><STRONG><a name="[17b]"></a>heatOn</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, hal.o(i.heatOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = heatOn
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supportWoshingTemperature
</UL>

<P><STRONG><a name="[17c]"></a>initBuzerTimer</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, hal.o(i.initBuzerTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = initBuzerTimer &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_PCLKcmd
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_ITConfig
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_DeInit
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_CntInit
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Cmd
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_BRGInit
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
</UL>

<P><STRONG><a name="[182]"></a>initBuzzer</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, hal.o(i.initBuzzer))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = initBuzzer &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_StructInit
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
</UL>

<P><STRONG><a name="[183]"></a>initCLK</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, hal.o(i.initCLK))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = initCLK &rArr; RST_CLK_DeInit &rArr; RST_CLK_WarmDeInit &rArr; RST_CLK_HSIstatus &rArr; RST_CLK_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_PCLKcmd
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_HSEstatus
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_HSEconfig
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_DeInit
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPUclkSelection
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPUclkPrescaler
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPU_PLLuse
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPU_PLLstatus
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPU_PLLconfig
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPU_PLLcmd
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
</UL>

<P><STRONG><a name="[18a]"></a>initDevice</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, hal.o(i.initDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = initDevice &rArr; tempSensorInit &rArr; DS18B20_ReadScratchpad &rArr; ExecuteCommand &rArr; OneWire_ProcessByte &rArr; OneWire_ProcessBit &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC595_Init
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_PCLKcmd
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Settings
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_Init
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_WriteBit
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempSensorInit
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMainPage
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_parser_init
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpr121_init
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashInit
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_setRotation
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_setContrast
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_initCmds
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_displayOn
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_display
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_cls
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initSPI
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initResetPin
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initRelay
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMainTimer
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initLCDLed
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCLK
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initBuzzer
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initBuzerTimer
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WiFi_uartInit
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxBuffer_Init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18d]"></a>initLCDLed</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, hal.o(i.initLCDLed))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = initLCDLed &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_StructInit
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SetBits
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
</UL>

<P><STRONG><a name="[18b]"></a>initMainTimer</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, hal.o(i.initMainTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = initMainTimer &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_PCLKcmd
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_ITConfig
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_DeInit
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_CntInit
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Cmd
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_BRGInit
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
</UL>

<P><STRONG><a name="[195]"></a>initMenuMainPage</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, mainpage.o(i.initMenuMainPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = initMenuMainPage &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPower
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woshingCancel
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;returnMenuClearingState_1
</UL>

<P><STRONG><a name="[18c]"></a>initRelay</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, hal.o(i.initRelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = initRelay &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_StructInit
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
</UL>

<P><STRONG><a name="[18e]"></a>initResetPin</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, hal.o(i.initResetPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = initResetPin &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_StructInit
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
</UL>

<P><STRONG><a name="[18f]"></a>initSPI</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, hal.o(i.initSPI))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = initSPI &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_StructInit
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Init
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_DeInit
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Cmd
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_BRGInit
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_StructInit
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
</UL>

<P><STRONG><a name="[86]"></a>main</STRONG> (Thumb, 580 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = main &rArr; initDevice &rArr; tempSensorInit &rArr; DS18B20_ReadScratchpad &rArr; ExecuteCommand &rArr; OneWire_ProcessByte &rArr; OneWire_ProcessBit &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempSensorInit
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPower
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendStatus
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readTemperature
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printTempSensorError
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMainPage
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_relay_control
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_init
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nasosOff
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpr121_get_touch
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMenuMainPage
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heatOff
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;collOff
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkSlider
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_Process_Stop_Loaded
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_Process_Stop
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[61]"></a>menuChangeDataFunctionTemp</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, menureceptshablon.o(i.menuChangeDataFunctionTemp))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = menuChangeDataFunctionTemp &rArr; changeValue &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menureceptshablon.o(i.setButtonNavigationToChangeValueTemp)
</UL>
<P><STRONG><a name="[62]"></a>menuChangeDataFunctionTempRecepte</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, menureceptcontrol.o(i.menuChangeDataFunctionTempRecepte))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = menuChangeDataFunctionTempRecepte &rArr; changeReceptValueTemperature &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTemperature
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menureceptcontrol.o(i.setButtonNavigationToChangeValueTempRecepte)
</UL>
<P><STRONG><a name="[63]"></a>menuChangeDataFunctionTempRecepteLoaded</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, menureceptloaded.o(i.menuChangeDataFunctionTempRecepteLoaded))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = menuChangeDataFunctionTempRecepteLoaded &rArr; changeReceptValueTemperatureLoaded &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTemperatureLoaded
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menureceptloaded.o(i.setButtonNavigationToChangeValueTempRecepteLoaded)
</UL>
<P><STRONG><a name="[64]"></a>menuChangeDataFunctionTimer</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, menureceptshablon.o(i.menuChangeDataFunctionTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = menuChangeDataFunctionTimer &rArr; changeValueTime &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValueTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menureceptshablon.o(i.setButtonNavigationToChangeValueTimer)
</UL>
<P><STRONG><a name="[65]"></a>menuChangeDataFunctionTimerRecepte</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, menureceptcontrol.o(i.menuChangeDataFunctionTimerRecepte))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = menuChangeDataFunctionTimerRecepte &rArr; changeReceptValueTime &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menureceptcontrol.o(i.setButtonNavigationToChangeValueTimerRecepte)
</UL>
<P><STRONG><a name="[66]"></a>menuChangeDataFunctionTimerRecepteLoaded</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, menureceptloaded.o(i.menuChangeDataFunctionTimerRecepteLoaded))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = menuChangeDataFunctionTimerRecepteLoaded &rArr; changeReceptValueTimeLoaded &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTimeLoaded
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menureceptloaded.o(i.setButtonNavigationToChangeValueTimerRecepteLoaded)
</UL>
<P><STRONG><a name="[5a]"></a>menuChangeTimeFunctionTime</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, menusetting.o(i.menuChangeTimeFunctionTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = menuChangeTimeFunctionTime &rArr; changeValueTime &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValueTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menusetting.o(i.menuChangeTimesetButtonNavigationFunction)
</UL>
<P><STRONG><a name="[1f]"></a>menuChangeTimesetButtonNavigationFunction</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, menusetting.o(i.menuChangeTimesetButtonNavigationFunction))
<BR>[Address Reference Count : 1]<UL><LI> menusetting.o(.data)
</UL>
<P><STRONG><a name="[1a4]"></a>menuNavigation</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, menu.o(i.menuNavigation))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = menuNavigation &rArr; MENU_Move &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_PrintPtr
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_PrintPage
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Move
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Exec
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menuNavigationFunction
</UL>

<P><STRONG><a name="[55]"></a>menuNavigationFunction</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, main.o(i.menuNavigationFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = menuNavigationFunction &rArr; menuNavigation &rArr; MENU_Move &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menuNavigation
</UL>
<BR>[Address Reference Count : 5]<UL><LI> menusetting.o(i.changeValueTime)
<LI> main.o(i.main)
<LI> menureceptcontrol.o(i.setMenuNavigationToChangeValueRecepte)
<LI> menureceptshablon.o(i.setMenuNavigationToChangeValue)
<LI> menureceptloaded.o(i.setMenuNavigationToChangeValueRecepteLoaded)
</UL>
<P><STRONG><a name="[20]"></a>menuSetTimeOK</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, menusetting.o(i.menuSetTimeOK))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = menuSetTimeOK
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGlobalTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menusetting.o(.data)
</UL>
<P><STRONG><a name="[df]"></a>millis</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, delay.o(i.millis))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPower
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendStatus
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printMainPage
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_relay_control
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRelay
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTimeLoaded
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTemperatureLoaded
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValueTime
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValue
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTime
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTemperature
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValueTime
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonExecute
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woshingProcess
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rinsingProcess
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disinfection
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stateMahineReceptTimerLoaded
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stateMahineReceptTimer
</UL>

<P><STRONG><a name="[19c]"></a>mpr121_get_touch</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, mpr121.o(i.mpr121_get_touch))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = mpr121_get_touch &rArr; read_register &rArr; I2Csft_GetAdrReg &rArr; I2Csft_SendByte &rArr; PIO_Init_Pin &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_register
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[194]"></a>mpr121_init</STRONG> (Thumb, 386 bytes, Stack size 32 bytes, mpr121.o(i.mpr121_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = mpr121_init &rArr; write_register &rArr; I2Csft_SendAdrReg &rArr; I2Csft_SendByte &rArr; PIO_Init_Pin &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinInit_IN
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_register
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_register
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
</UL>

<P><STRONG><a name="[1a9]"></a>myFabs</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, pid.o(i.myFabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = myFabs &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_compute
</UL>

<P><STRONG><a name="[176]"></a>nasosOff</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hal.o(i.nasosOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nasosOff
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woshingProcess
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woshingCancel
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rinsingProcess
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disinfection
</UL>

<P><STRONG><a name="[144]"></a>nasosOn</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hal.o(i.nasosOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nasosOn
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woshingProcess
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rinsingProcess
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disinfection
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessLauteringLoaded
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessLautering
</UL>

<P><STRONG><a name="[1ab]"></a>pid_Off</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, pid.o(i.pid_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pid_Off &rArr; set_pump
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pump
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_heater
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_cooler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receptSetFunctionLoaded
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopProcess
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receptSetFunction
</UL>

<P><STRONG><a name="[1af]"></a>pid_compute</STRONG> (Thumb, 280 bytes, Stack size 56 bytes, pid.o(i.pid_compute))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = pid_compute &rArr; myFabs &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myFabs
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_relay_control
</UL>

<P><STRONG><a name="[19b]"></a>pid_init</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, pid.o(i.pid_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pid_init &rArr; set_heater
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_heater
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_cooler
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a2]"></a>pid_relay_control</STRONG> (Thumb, 396 bytes, Stack size 32 bytes, pid.o(i.pid_relay_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = pid_relay_control &rArr; pid_compute &rArr; myFabs &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pump
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_heater
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_cooler
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_compute
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_temperature
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[164]"></a>pid_set_setpoint</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pid.o(i.pid_set_setpoint))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFilnrationAutoResnartLoaded
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFermentingAutoResnartLoaded
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionCoolingAutoResnartLoaded
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionBoilingAutoResnartLoaded
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionAutoResnartLoaded
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receptSetFunctionLoaded
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTemperatureLoaded
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValue
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFilnrationAutoResnart
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFermentingAutoResnart
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionCoolingAutoResnart
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionBoilingAutoResnart
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionAutoResnart
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receptSetFunction
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTemperature
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunction
</UL>

<P><STRONG><a name="[1a]"></a>printChangeTime</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, menusetting.o(i.printChangeTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = printChangeTime &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getGlobalTime
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allMenuTextClear
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_display
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menusetting.o(.data)
</UL>
<P><STRONG><a name="[23]"></a>printInsRecept</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, menureceptcontrol.o(i.printInsRecept))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = printInsRecept &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allMenuTextClear
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menureceptcontrol.o(.data)
</UL>
<P><STRONG><a name="[190]"></a>printMainPage</STRONG> (Thumb, 714 bytes, Stack size 64 bytes, mainpage.o(i.printMainPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = printMainPage &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getGlobalTime
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_display
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_setFont
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_drawLineH
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_drawBitmap
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_clerBitmap
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_align_text
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12]"></a>printMenuClearingState_1</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, menuclearing.o(i.printMenuClearingState_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = printMenuClearingState_1 &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_display
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_cls
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configureMenuButtons
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_setFont
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainpage.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>printMenuManualControl</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, menumanualcontrol.o(i.printMenuManualControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = printMenuManualControl &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allMenuTextClear
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_setFont
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mainpage.o(.data)
<LI> menumanualcontrol.o(i.printShablonManalControl)
</UL>
<P><STRONG><a name="[15]"></a>printMenuReceptInt</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, menurecept.o(i.printMenuReceptInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = printMenuReceptInt &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allMenuTextClear
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_setFont
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menurecept.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>printMenuReceptLoaded</STRONG> (Thumb, 328 bytes, Stack size 16 bytes, menurecept.o(i.printMenuReceptLoaded))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = printMenuReceptLoaded &rArr; Recipe_GetNames &rArr; W25qxx_IsEmptyPage &rArr; HAL_SPI_Receive &rArr; SPI_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allMenuTextClear
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recipe_StorageInit
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recipe_GetNames
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recipe_GetCount
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menurecept.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>printMenuReceptMain</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, menurecept.o(i.printMenuReceptMain))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = printMenuReceptMain &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allMenuTextClear
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_setFont
</UL>
<BR>[Address Reference Count : 3]<UL><LI> mainpage.o(.data)
<LI> menurecept.o(i.printMenuReceptInt)
<LI> menurecept.o(i.printMenuReceptLoaded)
</UL>
<P><STRONG><a name="[14]"></a>printMenuSetting</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, menusetting.o(i.printMenuSetting))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = printMenuSetting &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allMenuTextClear
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_setFont
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mainpage.o(.data)
<LI> menusetting.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>printReceptLoaded</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, menureceptloaded.o(i.printReceptLoaded))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = printReceptLoaded &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allMenuTextClear
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menureceptloaded.o(.data)
</UL>
<P><STRONG><a name="[1b3]"></a>printShablon</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, menureceptshablon.o(i.printShablon))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = printShablon &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allMenuTextClear
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTimerStr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTemperatureStr
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablonManalControl
</UL>

<P><STRONG><a name="[19]"></a>printShablonManalControl</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, menumanualcontrol.o(i.printShablonManalControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = printShablonManalControl &rArr; printShablon &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablon
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menumanualcontrol.o(.data)
</UL>
<P><STRONG><a name="[1b4]"></a>printShablonRecepte</STRONG> (Thumb, 208 bytes, Stack size 16 bytes, menureceptcontrol.o(i.printShablonRecepte))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = printShablonRecepte &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allMenuTextClear
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTimerStr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTemperatureStr
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startRecepteProcess
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receptSetFunction
</UL>

<P><STRONG><a name="[1b5]"></a>printShablonRecepteLoaded</STRONG> (Thumb, 208 bytes, Stack size 16 bytes, menureceptloaded.o(i.printShablonRecepteLoaded))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = printShablonRecepteLoaded &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allMenuTextClear
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTimerStr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTemperatureStr
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startRecepteProcessLoaded
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receptSetFunctionLoaded
</UL>

<P><STRONG><a name="[19f]"></a>printTempSensorError</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, hal.o(i.printTempSensorError))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = printTempSensorError &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_display
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_cls
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a1]"></a>readTemperature</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, tempsensor.o(i.readTemperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = readTemperature &rArr; DS18B20_ReadScratchpad &rArr; ExecuteCommand &rArr; OneWire_ProcessByte &rArr; OneWire_ProcessBit &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_SkipRom
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ReadScratchpad
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_InitializationCommand
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ConvertT
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a7]"></a>read_register</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, mpr121.o(i.read_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = read_register &rArr; I2Csft_GetAdrReg &rArr; I2Csft_SendByte &rArr; PIO_Init_Pin &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_GetAdrReg
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpr121_get_touch
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpr121_init
</UL>

<P><STRONG><a name="[24]"></a>receptSetFunction</STRONG> (Thumb, 350 bytes, Stack size 16 bytes, menureceptcontrol.o(i.receptSetFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = receptSetFunction &rArr; printShablonRecepte &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_Process_Stop
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_set_setpoint
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_Off
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_Process_Start
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablonRecepte
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menureceptcontrol.o(.data)
</UL>
<P><STRONG><a name="[2c]"></a>receptSetFunctionLoaded</STRONG> (Thumb, 350 bytes, Stack size 16 bytes, menureceptloaded.o(i.receptSetFunctionLoaded))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = receptSetFunctionLoaded &rArr; printShablonRecepteLoaded &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_Process_Stop_Loaded
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_set_setpoint
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_Off
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_Process_Start_Loaded
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablonRecepteLoaded
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menureceptloaded.o(.data)
</UL>
<P><STRONG><a name="[5c]"></a>returnMenuClearingState_1</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, menuclearing.o(i.returnMenuClearingState_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = returnMenuClearingState_1 &rArr; initMenuMainPage &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMenuMainPage
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_cls
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menuclearing.o(i.printMenuClearingState_1)
</UL>
<P><STRONG><a name="[60]"></a>rinsingProcess</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, menuclearing.o(i.rinsingProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = rinsingProcess &rArr; transitionToDisinfectionMenu &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nasosOff
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nasosOn
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTimeRemaining
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transitionToDisinfectionMenu
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supportWoshingTemperature
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menuclearing.o(i.rinsingProcessStart)
</UL>
<P><STRONG><a name="[5f]"></a>rinsingProcessSkip</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, menuclearing.o(i.rinsingProcessSkip))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = rinsingProcessSkip &rArr; transitionToDisinfectionMenu &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transitionToDisinfectionMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menuclearing.o(i.rinsingProcessStart)
</UL>
<P><STRONG><a name="[6b]"></a>rinsingProcessStart</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, menuclearing.o(i.rinsingProcessStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = rinsingProcessStart &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_display
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_cls
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configureMenuButtons
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menuclearing.o(i.transitionToRinsingMenu)
</UL>
<P><STRONG><a name="[127]"></a>sendCmd</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, st7567_fb.o(i.sendCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sendCmd &rArr; sendSPI
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendSPI
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_setRotation
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_setContrast
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_initCmds
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_displayOn
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_gotoXY
</UL>

<P><STRONG><a name="[125]"></a>sendSPI</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, st7567_fb.o(i.sendSPI))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sendSPI
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_SendData
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_GetFlagStatus
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_ReceiveData
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_display
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendCmd
</UL>

<P><STRONG><a name="[1a3]"></a>sendStatus</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, hal.o(i.sendStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = sendStatus &rArr; convertToJSON &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ITConfig
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertToJSON
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>setButtonNavigationToChangeValueTemp</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, menureceptshablon.o(i.setButtonNavigationToChangeValueTemp))
<BR>[Address Reference Count : 1]<UL><LI> menureceptshablon.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>setButtonNavigationToChangeValueTempRecepte</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, menureceptcontrol.o(i.setButtonNavigationToChangeValueTempRecepte))
<BR>[Address Reference Count : 1]<UL><LI> menureceptcontrol.o(.data)
</UL>
<P><STRONG><a name="[29]"></a>setButtonNavigationToChangeValueTempRecepteLoaded</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, menureceptloaded.o(i.setButtonNavigationToChangeValueTempRecepteLoaded))
<BR>[Address Reference Count : 1]<UL><LI> menureceptloaded.o(.data)
</UL>
<P><STRONG><a name="[27]"></a>setButtonNavigationToChangeValueTimer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, menureceptshablon.o(i.setButtonNavigationToChangeValueTimer))
<BR>[Address Reference Count : 1]<UL><LI> menureceptshablon.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>setButtonNavigationToChangeValueTimerRecepte</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, menureceptcontrol.o(i.setButtonNavigationToChangeValueTimerRecepte))
<BR>[Address Reference Count : 1]<UL><LI> menureceptcontrol.o(.data)
</UL>
<P><STRONG><a name="[2a]"></a>setButtonNavigationToChangeValueTimerRecepteLoaded</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, menureceptloaded.o(i.setButtonNavigationToChangeValueTimerRecepteLoaded))
<BR>[Address Reference Count : 1]<UL><LI> menureceptloaded.o(.data)
</UL>
<P><STRONG><a name="[1a6]"></a>setGlobalTime</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, delay.o(i.setGlobalTime))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menuSetTimeOK
</UL>

<P><STRONG><a name="[16d]"></a>setMenuNavigationToChangeValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, menureceptshablon.o(i.setMenuNavigationToChangeValue))
<BR><BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValueTime
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValue
</UL>

<P><STRONG><a name="[165]"></a>setMenuNavigationToChangeValueRecepte</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, menureceptcontrol.o(i.setMenuNavigationToChangeValueRecepte))
<BR><BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTime
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTemperature
</UL>

<P><STRONG><a name="[167]"></a>setMenuNavigationToChangeValueRecepteLoaded</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, menureceptloaded.o(i.setMenuNavigationToChangeValueRecepteLoaded))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTimeLoaded
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTemperatureLoaded
</UL>

<P><STRONG><a name="[1a0]"></a>setPower</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, powertuning.o(i.setPower))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = setPower &rArr; initMenuMainPage &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SetBits
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMenuMainPage
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allMenuTextClear
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ad]"></a>set_cooler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, pid.o(i.set_cooler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_cooler
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SetBits
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_relay_control
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_init
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_Off
</UL>

<P><STRONG><a name="[1ac]"></a>set_heater</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, pid.o(i.set_heater))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_heater
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SetBits
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_relay_control
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_init
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_Off
</UL>

<P><STRONG><a name="[1ae]"></a>set_pump</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, pid.o(i.set_pump))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_pump
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SetBits
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_relay_control
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_Off
</UL>

<P><STRONG><a name="[68]"></a>shablonExecute</STRONG> (Thumb, 250 bytes, Stack size 16 bytes, menureceptshablon.o(i.shablonExecute))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = shablonExecute &rArr; shablonSetFunction &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonPrintCurrentData
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunction
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menureceptshablon.o(i.shablonSetFunction)
</UL>
<P><STRONG><a name="[1b9]"></a>shablonPrintCurrentData</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, menureceptshablon.o(i.shablonPrintCurrentData))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = shablonPrintCurrentData &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonExecute
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stateMahineReceptTimerLoaded
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stateMahineReceptTimer
</UL>

<P><STRONG><a name="[28]"></a>shablonSetFunction</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, menureceptshablon.o(i.shablonSetFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = shablonSetFunction &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_set_setpoint
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonExecute
</UL>
<BR>[Address Reference Count : 2]<UL><LI> menureceptshablon.o(.data)
<LI> menumanualcontrol.o(i.printShablonManalControl)
</UL>
<P><STRONG><a name="[149]"></a>shablonSetFunctionAutoResnart</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, menureceptcontrol.o(i.shablonSetFunctionAutoResnart))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = shablonSetFunctionAutoResnart &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_set_setpoint
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTimerStr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTemperatureStr
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchStadge
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessMashing
</UL>

<P><STRONG><a name="[14c]"></a>shablonSetFunctionAutoResnartLoaded</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, menureceptloaded.o(i.shablonSetFunctionAutoResnartLoaded))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = shablonSetFunctionAutoResnartLoaded &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_set_setpoint
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTimerStr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTemperatureStr
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessMashingLoaded
</UL>

<P><STRONG><a name="[145]"></a>shablonSetFunctionBoilingAutoResnart</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, menureceptcontrol.o(i.shablonSetFunctionBoilingAutoResnart))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = shablonSetFunctionBoilingAutoResnart &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_set_setpoint
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTimerStr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTemperatureStr
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchStadge
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessLautering
</UL>

<P><STRONG><a name="[147]"></a>shablonSetFunctionBoilingAutoResnartLoaded</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, menureceptloaded.o(i.shablonSetFunctionBoilingAutoResnartLoaded))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = shablonSetFunctionBoilingAutoResnartLoaded &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_set_setpoint
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTimerStr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTemperatureStr
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessLauteringLoaded
</UL>

<P><STRONG><a name="[139]"></a>shablonSetFunctionCoolingAutoResnart</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, menureceptcontrol.o(i.shablonSetFunctionCoolingAutoResnart))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = shablonSetFunctionCoolingAutoResnart &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_set_setpoint
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTimerStr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTemperatureStr
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchStadge
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessBoiling
</UL>

<P><STRONG><a name="[13c]"></a>shablonSetFunctionCoolingAutoResnartLoaded</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, menureceptloaded.o(i.shablonSetFunctionCoolingAutoResnartLoaded))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = shablonSetFunctionCoolingAutoResnartLoaded &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_set_setpoint
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTimerStr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTemperatureStr
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessBoilingLoaded
</UL>

<P><STRONG><a name="[13f]"></a>shablonSetFunctionFermentingAutoResnart</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, menureceptcontrol.o(i.shablonSetFunctionFermentingAutoResnart))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = shablonSetFunctionFermentingAutoResnart &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_set_setpoint
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTimerStr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTemperatureStr
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchStadge
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessCooling
</UL>

<P><STRONG><a name="[141]"></a>shablonSetFunctionFermentingAutoResnartLoaded</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, menureceptloaded.o(i.shablonSetFunctionFermentingAutoResnartLoaded))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = shablonSetFunctionFermentingAutoResnartLoaded &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_set_setpoint
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTimerStr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTemperatureStr
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessCoolingLoaded
</UL>

<P><STRONG><a name="[148]"></a>shablonSetFunctionFilnrationAutoResnart</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, menureceptcontrol.o(i.shablonSetFunctionFilnrationAutoResnart))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = shablonSetFunctionFilnrationAutoResnart &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_set_setpoint
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTimerStr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTemperatureStr
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchStadge
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessMashing
</UL>

<P><STRONG><a name="[14b]"></a>shablonSetFunctionFilnrationAutoResnartLoaded</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, menureceptloaded.o(i.shablonSetFunctionFilnrationAutoResnartLoaded))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = shablonSetFunctionFilnrationAutoResnartLoaded &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_set_setpoint
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTimerStr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTemperatureStr
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessMashingLoaded
</UL>

<P><STRONG><a name="[17]"></a>startRecepteProcess</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, menureceptcontrol.o(i.startRecepteProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = startRecepteProcess &rArr; printShablonRecepte &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablonRecepte
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menurecept.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>startRecepteProcessLoaded</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menureceptloaded.o(i.startRecepteProcessLoaded))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = startRecepteProcessLoaded &rArr; printShablonRecepteLoaded &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Recipe_ReadFromFlash
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printShablonRecepteLoaded
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menurecept.o(.data)
</UL>
<P><STRONG><a name="[137]"></a>stateMahineReceptTimer</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, state_machine.o(i.stateMahineReceptTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = stateMahineReceptTimer &rArr; shablonPrintCurrentData &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonPrintCurrentData
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessMashing
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessLautering
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessFermenting
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessCooling
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessBoiling
</UL>

<P><STRONG><a name="[13b]"></a>stateMahineReceptTimerLoaded</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, state_machineloaded.o(i.stateMahineReceptTimerLoaded))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = stateMahineReceptTimerLoaded &rArr; shablonPrintCurrentData &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonPrintCurrentData
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessMashingLoaded
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessLauteringLoaded
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessFermentingLoaded
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessCoolingLoaded
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessBoilingLoaded
</UL>

<P><STRONG><a name="[142]"></a>stopProcess</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, menureceptcontrol.o(i.stopProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = stopProcess &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_Off
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessFermentingLoaded
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessFermenting
</UL>

<P><STRONG><a name="[174]"></a>supportWoshingTemperature</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, menuclearing.o(i.supportWoshingTemperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = supportWoshingTemperature &rArr; heatOff
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heatOff
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heatOn
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woshingProcess
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transitionToRinsingMenu
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rinsingProcess
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disinfection
</UL>

<P><STRONG><a name="[25]"></a>switchStadge</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, state_machine.o(i.switchStadge))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = switchStadge &rArr; shablonSetFunctionFermentingAutoResnart &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFilnrationAutoResnart
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionFermentingAutoResnart
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionCoolingAutoResnart
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionBoilingAutoResnart
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shablonSetFunctionAutoResnart
</UL>
<BR>[Address Reference Count : 3]<UL><LI> menureceptcontrol.o(.data)
<LI> menureceptshablon.o(.data)
<LI> menureceptloaded.o(.data)
</UL>
<P><STRONG><a name="[191]"></a>tempSensorInit</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, tempsensor.o(i.tempSensorInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = tempSensorInit &rArr; DS18B20_ReadScratchpad &rArr; ExecuteCommand &rArr; OneWire_ProcessByte &rArr; OneWire_ProcessBit &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_WriteScratchpad
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_SkipRom
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ReadScratchpad
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ReadRom
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_InitializationCommand
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[177]"></a>transitionToCompletionMenu</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, menuclearing.o(i.transitionToCompletionMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = transitionToCompletionMenu &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_cls
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disinfection
</UL>

<P><STRONG><a name="[1b8]"></a>transitionToDisinfectionMenu</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, menuclearing.o(i.transitionToDisinfectionMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = transitionToDisinfectionMenu &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_cls
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configureMenuButtons
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rinsingProcessSkip
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rinsingProcess
</UL>

<P><STRONG><a name="[1ba]"></a>transitionToRinsingMenu</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, menuclearing.o(i.transitionToRinsingMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = transitionToRinsingMenu &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_cls
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configureMenuButtons
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supportWoshingTemperature
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woshingSkip
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woshingProcess
</UL>

<P><STRONG><a name="[193]"></a>uart_parser_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, json.o(i.uart_parser_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uart_parser_init &rArr; my_memset
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDevice
</UL>

<P><STRONG><a name="[152]"></a>uart_receive_byte</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, json.o(i.uart_receive_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_receive_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>

<P><STRONG><a name="[67]"></a>updateRelay</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, powertuning.o(i.updateRelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = updateRelay &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SetBits
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_display
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> powertuning.o(i.setPower)
</UL>
<P><STRONG><a name="[15d]"></a>w25qxx_spi_Init</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, w25qxx_spi.o(i.w25qxx_spi_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = w25qxx_spi_Init &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_StructInit
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qxx_SPI_Init
</UL>

<P><STRONG><a name="[58]"></a>woshingCancel</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, menuclearing.o(i.woshingCancel))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = woshingCancel &rArr; initMenuMainPage &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nasosOff
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMenuMainPage
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heatOff
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;collOff
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_cls
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woshingComplite
</UL>
<BR>[Address Reference Count : 5]<UL><LI> menuclearing.o(i.rinsingProcessStart)
<LI> menuclearing.o(i.transitionToDisinfectionMenu)
<LI> menuclearing.o(i.transitionToRinsingMenu)
<LI> menuclearing.o(i.woshingProcessStart)
<LI> menuclearing.o(i.disinfectionProcessStart)
</UL>
<P><STRONG><a name="[69]"></a>woshingComplite</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, menuclearing.o(i.woshingComplite))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = woshingComplite &rArr; woshingCancel &rArr; initMenuMainPage &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woshingCancel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menuclearing.o(i.transitionToCompletionMenu)
</UL>
<P><STRONG><a name="[6d]"></a>woshingProcess</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, menuclearing.o(i.woshingProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = woshingProcess &rArr; transitionToRinsingMenu &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nasosOff
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_display
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nasosOn
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayTimeRemaining
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transitionToRinsingMenu
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supportWoshingTemperature
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menuclearing.o(i.woshingProcessStart)
</UL>
<P><STRONG><a name="[5b]"></a>woshingProcessStart</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, menuclearing.o(i.woshingProcessStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = woshingProcessStart &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_display
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_cls
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configureMenuButtons
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menuclearing.o(i.printMenuClearingState_1)
</UL>
<P><STRONG><a name="[6c]"></a>woshingSkip</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, menuclearing.o(i.woshingSkip))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = woshingSkip &rArr; transitionToRinsingMenu &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transitionToRinsingMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menuclearing.o(i.woshingProcessStart)
</UL>
<P><STRONG><a name="[1a8]"></a>write_register</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, mpr121.o(i.write_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = write_register &rArr; I2Csft_SendAdrReg &rArr; I2Csft_SendByte &rArr; PIO_Init_Pin &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Csft_SendAdrReg
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpr121_init
</UL>

<P><STRONG><a name="[80]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _get_lc_numeric &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
</UL>

<P><STRONG><a name="[162]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readTemperature
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_compute
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTemperatureLoaded
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValue
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTemperature
</UL>

<P><STRONG><a name="[1bd]"></a>_fadd</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[1aa]"></a>__aeabi_cfcmple</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, flef.o(x$fpl$fleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_relay_control
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_compute
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myFabs
</UL>

<P><STRONG><a name="[1bf]"></a>_fcmple</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, flef.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[d5]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ReadScratchpad
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_compute
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myFabs
</UL>

<P><STRONG><a name="[201]"></a>_fmul</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)

<P><STRONG><a name="[13e]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, frlef.o(x$fpl$frleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_relay_control
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_compute
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supportWoshingTemperature
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessCoolingLoaded
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateMachine_ProcessCooling
</UL>

<P><STRONG><a name="[1c0]"></a>_frcmple</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, frlef.o(x$fpl$frleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[163]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_compute
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTemperatureLoaded
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeValue
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeReceptValueTemperature
</UL>

<P><STRONG><a name="[1c1]"></a>_fsub</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[75]"></a>_printf_fp_dec</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _printf_fp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[15f]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hal.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMainTimer
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initBuzerTimer
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WiFi_uartInit
</UL>

<P><STRONG><a name="[d9]"></a>CalculateChecksum</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, ds18b20.o(i.CalculateChecksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CalculateChecksum
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExecuteCommand
</UL>

<P><STRONG><a name="[c9]"></a>ExecuteCommand</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, ds18b20.o(i.ExecuteCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ExecuteCommand &rArr; OneWire_ProcessByte &rArr; OneWire_ProcessBit &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_ProcessByte
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateChecksum
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_WriteScratchpad
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_SkipRom
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ReadScratchpad
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ReadRom
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ConvertT
</UL>

<P><STRONG><a name="[ca]"></a>WaitForConversionFinished</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, ds18b20.o(i.WaitForConversionFinished))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WaitForConversionFinished &rArr; OneWire_ProcessBit &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_ProcessBit
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS18B20_ConvertT
</UL>

<P><STRONG><a name="[175]"></a>displayTimeRemaining</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, menuclearing.o(i.displayTimeRemaining))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = displayTimeRemaining &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_align_text
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woshingProcess
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rinsingProcess
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disinfection
</UL>

<P><STRONG><a name="[16e]"></a>changeValueTime</STRONG> (Thumb, 400 bytes, Stack size 24 bytes, menusetting.o(i.changeValueTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = changeValueTime &rArr; MENU_Init &rArr; MENU_PrintPtr &rArr; MENU_PrintPage &rArr; ST7567_FB_printText &rArr; ST7567_FB_drawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_fillRect
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_printText
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7567_FB_display
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menuChangeTimeFunctionTime
</UL>

<P><STRONG><a name="[1bb]"></a>my_memset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, json.o(i.my_memset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = my_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_parser_init
</UL>

<P><STRONG><a name="[1c2]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
</UL>

<P><STRONG><a name="[1be]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[ab]"></a>_fp_digits</STRONG> (Thumb, 412 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; btod_internal_mul &rArr; __ARM_common_ll_muluu
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[54]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[ba]"></a>btod_internal_mul</STRONG> (Thumb, 492 bytes, Stack size 56 bytes, btod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = btod_internal_mul &rArr; __ARM_common_ll_muluu
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_muluu
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[bd]"></a>btod_internal_div</STRONG> (Thumb, 520 bytes, Stack size 64 bytes, btod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = btod_internal_div
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[c4]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[b4]"></a>_printf_mbtowc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[95]"></a>_printf_truncate_signed</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[96]"></a>_printf_truncate_unsigned</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>
<HR></body></html>
